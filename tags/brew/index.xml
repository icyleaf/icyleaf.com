<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>brew on icyleaf</title><link>https://icyleaf.com/tags/brew/</link><description>Recent content in brew on icyleaf</description><language>zh</language><lastBuildDate>Sat, 25 Jan 2014 12:34:56 +0800</lastBuildDate><atom:link href="https://icyleaf.com/tags/brew/index.xml" rel="self" type="application/rss+xml"/><item><title>Homebrew 隐藏命令</title><link>https://icyleaf.com/2014/01/homebrew-hidden-commands/</link><pubDate>Sat, 25 Jan 2014 12:34:56 +0800</pubDate><guid>https://icyleaf.com/2014/01/homebrew-hidden-commands/</guid><description>
适用于 macOS 服务下的小秘密</description><content:encoded><![CDATA[<p><a href="http://brew.sh">Homebrew</a> 可谓是 Mac 开发者必备的工具之一，它承载在各种包管理的特性以及拥有一票热情高涨的社区提供强大支持。今天我就给大家解密一下 brew 内部的隐藏命令都有哪些。</p>
<h2 id="服务管理">服务管理</h2>
<p>当我们安装了众多需要挂载的服务，需要重启或停止的时候，都特别希望 Mac 可以有个统一的命令可以管理服务的状态，比如 <code>services</code> 命令甚至说 <code>/etc/init.d/</code> 也可以啊！</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln"> 1</span><span class="cl">$ brew services <span class="nb">command</span> <span class="o">[</span>formula<span class="o">]</span>
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">usage: <span class="o">[</span>sudo<span class="o">]</span> brew services <span class="o">[</span>--help<span class="o">]</span> &lt;command&gt; <span class="o">[</span>&lt;formula&gt;<span class="o">]</span>
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">Small wrapper around <span class="sb">`</span>launchctl<span class="sb">`</span> <span class="k">for</span> supported formulae, commands available:
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">	cleanup Get rid of stale services and unused plists
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">	list    List all services managed by <span class="sb">`</span>brew services<span class="sb">`</span>
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">	restart Gracefully restart selected service
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">	start   Start selected service
</span></span><span class="line"><span class="ln">10</span><span class="cl">	stop    Stop selected service
</span></span><span class="line"><span class="ln">11</span><span class="cl">
</span></span><span class="line"><span class="ln">12</span><span class="cl">Options, sudo and paths:
</span></span><span class="line"><span class="ln">13</span><span class="cl">
</span></span><span class="line"><span class="ln">14</span><span class="cl">sudo   When run as root, operates on /Library/LaunchDaemons <span class="o">(</span>run at boot!<span class="o">)</span>
</span></span><span class="line"><span class="ln">15</span><span class="cl">Run at boot:  /Library/LaunchDaemons
</span></span><span class="line"><span class="ln">16</span><span class="cl">Run at login: /Users/icyleaf/Library/LaunchAgents
</span></span></code></pre></div><p>这个是我要讲的第一个隐藏命令！太坑爹了，那么实用的命令居然没有包含在 <code>brew --help</code> 帮助里面！我们再也不用发愁记住 <code>launchctl load/unload &lt;path&gt;</code> 的坑爹命令了！</p>
<p>重启 Nigix 就那么简单：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">$ brew services restart nginx
</span></span></code></pre></div><p>停止 Postgresql 服务</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">$ brew services stop mysql
</span></span></code></pre></div><p>查看系统通过 brew 安装的服务：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">$ brew services list
</span></span><span class="line"><span class="ln">2</span><span class="cl">postgresql started        - /Users/icyleaf/Library/LaunchAgents/homebrew.mxcl.postgresql.plist
</span></span><span class="line"><span class="ln">3</span><span class="cl">nginx      started        - /Users/icyleaf/Library/LaunchAgents/homebrew.mxcl.nginx.plist
</span></span></code></pre></div><p>清除已卸载无用的启动配置文件：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">$ brew services cleanup
</span></span><span class="line"><span class="ln">2</span><span class="cl">Removing unused plist /Users/icyleaf/Library/LaunchAgents/homebrew.mxcl.mysql.plist
</span></span><span class="line"><span class="ln">3</span><span class="cl">Removing unused plist /Users/icyleaf/Library/LaunchAgents/homebrew.mxcl.redis.plist
</span></span></code></pre></div><h2 id="安装扩展">安装扩展</h2>
<p>这个相信很多人都已经用到过了，安装他人扩展的 brew 服务。由于 brew 和包含的包源都是通过 github 来管理，人为的维护管理，除了自己的源还允许别人的源添加进来。类似与 <code>Ubuntu</code> 的 <code>ppa</code>。好处在于只有我安装规定的方式把包丢到 github 上面就可以用了！</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">$ brew tap &lt;gihhub_user/repo&gt;
</span></span></code></pre></div><p>这个命令并没有包含任何的帮助说明，其实它只接受上面的这个参数。</p>
<p>举例说明一下，Mac OS 比较歧视 PHP ，所以每次系统更新都会把常用的开发包（Ruby、Python 等）也顺带着更新到最新版本。（吐槽：Java 都已经被抛弃不再默认安装了），而 <code>brew</code> 居然也不包含 <code>PHP</code> 的包，那怎么办呢？</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">$ brew tap josegonzalez/php
</span></span></code></pre></div><p>命令完成之后，执行（当前最新是 php 5.5 版本，请根据需要替换）</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">$ brew install php55
</span></span></code></pre></div><p>当我们没有传递任何参数，默认显示已经通过 <code>tap</code> 安装了哪些扩展，为什么我说是通过 <code>tap</code> 呢，因为 <code>brew</code> 其实除了这些自身也用了一些其他扩展，通过下面命令显示：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">$ brew ls-taps
</span></span></code></pre></div><h2 id="web-化显示可用包和已安装工具">Web 化显示可用包和已安装工具</h2>
<p>对于习惯命令行的人这个用途不大，就顺带一提而已，这个命令依赖 <code>sinatra</code>，大家通过 <code>gem</code> 安装即可。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">$ brew server
</span></span></code></pre></div><blockquote>
<p>如果你用 <code>puma</code> 可能报一个 <strong>[BUG] Segmentation fault</strong> 错误，那是因为你通过 rvm 或 renv 安装了跟高级的版本，而系统却用的 1.8.7 造成了版本差，请切换为系统依赖后再重试（你可能需要重新安装 sinata）：</p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">$ rvm use system
</span></span><span class="line"><span class="ln">2</span><span class="cl">$ /usr/bin/gem install sinatra
</span></span></code></pre></div><h2 id="彩蛋">彩蛋</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">$ brew beer
</span></span></code></pre></div><h2 id="更多隐藏命令">更多隐藏命令</h2>
<p>一次性没太多精力完解读所有隐藏命令，这个艰巨的任务就交给大家了：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">$ brew commands
</span></span></code></pre></div><p>其实这些命令可以在<a href="https://github.com/Homebrew/homebrew/tree/master/Library/Contributions/cmd">官方源代码</a>看到。</p>
]]></content:encoded></item></channel></rss>