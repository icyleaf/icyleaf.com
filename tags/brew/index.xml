<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Brew on icyleaf</title>
    <link>http://icyleaf.github.io/icyleaf.com/tags/brew/</link>
    <description>Recent content in Brew on icyleaf</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>All rights reserved - 2007</copyright>
    <lastBuildDate>Sat, 25 Jan 2014 12:34:56 +0800</lastBuildDate>
    <atom:link href="http://icyleaf.github.io/icyleaf.com/tags/brew/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Homebrew 隐藏命令</title>
      <link>http://icyleaf.github.io/icyleaf.com/2014/01/homebrew-hidden-commands</link>
      <pubDate>Sat, 25 Jan 2014 12:34:56 +0800</pubDate>
      
      <guid>http://icyleaf.github.io/icyleaf.com/2014/01/homebrew-hidden-commands</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://brew.sh&#34;&gt;Homebrew&lt;/a&gt; 可谓是 Mac 开发者必备的工具之一，它承载在各种包管理的特性以及拥有一票热情高涨的社区提供强大支持。今天我就给大家解密一下 brew 内部的隐藏命令都有哪些。&lt;/p&gt;

&lt;h2 id=&#34;服务管理&#34;&gt;服务管理&lt;/h2&gt;

&lt;p&gt;当我们安装了众多需要挂载的服务，需要重启或停止的时候，都特别希望 Mac 可以有个统一的命令可以管理服务的状态，比如 &lt;code&gt;services&lt;/code&gt; 命令甚至说 &lt;code&gt;/etc/init.d/&lt;/code&gt; 也可以啊！&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ brew services command [formula]

usage: [sudo] brew services [--help] &amp;lt;command&amp;gt; [&amp;lt;formula&amp;gt;]
Small wrapper around `launchctl` for supported formulae, commands available:

	cleanup Get rid of stale services and unused plists
	list    List all services managed by `brew services`
	restart Gracefully restart selected service
	start   Start selected service
	stop    Stop selected service

Options, sudo and paths:

sudo   When run as root, operates on /Library/LaunchDaemons (run at boot!)
Run at boot:  /Library/LaunchDaemons
Run at login: /Users/icyleaf/Library/LaunchAgents
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个是我要讲的第一个隐藏命令！太坑爹了，那么实用的命令居然没有包含在 &lt;code&gt;brew --help&lt;/code&gt; 帮助里面！我们再也不用发愁记住 &lt;code&gt;launchctl load/unload &amp;lt;path&amp;gt;&lt;/code&gt; 的坑爹命令了！&lt;/p&gt;

&lt;p&gt;重启 Nigix 就那么简单：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ brew services restart nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;停止 Postgresql 服务&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ brew services stop mysql
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看系统通过 brew 安装的服务：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ brew services list
postgresql started        - /Users/icyleaf/Library/LaunchAgents/homebrew.mxcl.postgresql.plist
nginx      started        - /Users/icyleaf/Library/LaunchAgents/homebrew.mxcl.nginx.plist
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;清除已卸载无用的启动配置文件：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ brew services cleanup
Removing unused plist /Users/icyleaf/Library/LaunchAgents/homebrew.mxcl.mysql.plist
Removing unused plist /Users/icyleaf/Library/LaunchAgents/homebrew.mxcl.redis.plist
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;安装扩展&#34;&gt;安装扩展&lt;/h2&gt;

&lt;p&gt;这个相信很多人都已经用到过了，安装他人扩展的 brew 服务。由于 brew 和包含的包源都是通过 github 来管理，人为的维护管理，除了自己的源还允许别人的源添加进来。类似与 &lt;code&gt;Ubuntu&lt;/code&gt; 的 &lt;code&gt;ppa&lt;/code&gt;。好处在于只有我安装规定的方式把包丢到 github 上面就可以用了！&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ brew tap &amp;lt;gihhub_user/repo&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个命令并没有包含任何的帮助说明，其实它只接受上面的这个参数。&lt;/p&gt;

&lt;p&gt;举例说明一下，Mac OS 比较歧视 PHP ，所以每次系统更新都会把常用的开发包（Ruby、Python 等）也顺带着更新到最新版本。（吐槽：Java 都已经被抛弃不再默认安装了），而 &lt;code&gt;brew&lt;/code&gt; 居然也不包含 &lt;code&gt;PHP&lt;/code&gt; 的包，那怎么办呢？&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ brew tap josegonzalez/php
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;命令完成之后，执行（当前最新是 php 5.5 版本，请根据需要替换）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ brew install php55
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;当我们没有传递任何参数，默认显示已经通过 &lt;code&gt;tap&lt;/code&gt; 安装了哪些扩展，为什么我说是通过 &lt;code&gt;tap&lt;/code&gt; 呢，因为 &lt;code&gt;brew&lt;/code&gt; 其实除了这些自身也用了一些其他扩展，通过下面命令显示：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ brew ls-taps
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;web-化显示可用包和已安装工具&#34;&gt;Web 化显示可用包和已安装工具&lt;/h2&gt;

&lt;p&gt;对于习惯命令行的人这个用途不大，就顺带一提而已，这个命令依赖 &lt;code&gt;sinatra&lt;/code&gt;，大家通过 &lt;code&gt;gem&lt;/code&gt; 安装即可。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ brew server
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;如果你用 &lt;code&gt;puma&lt;/code&gt; 可能报一个 &lt;strong&gt;[BUG] Segmentation fault&lt;/strong&gt; 错误，那是因为你通过 rvm 或 renv 安装了跟高级的版本，而系统却用的 1.8.7 造成了版本差，请切换为系统依赖后再重试（你可能需要重新安装 sinata）：&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;$ rvm use system
$ /usr/bin/gem install sinatra
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;彩蛋&#34;&gt;彩蛋&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ brew beer
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;更多隐藏命令&#34;&gt;更多隐藏命令&lt;/h2&gt;

&lt;p&gt;一次性没太多精力完解读所有隐藏命令，这个艰巨的任务就交给大家了：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ brew commands

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其实这些命令可以在&lt;a href=&#34;https://github.com/Homebrew/homebrew/tree/master/Library/Contributions/cmd&#34;&gt;官方源代码&lt;/a&gt;看到。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>