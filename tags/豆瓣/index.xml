<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>豆瓣 on icyleaf</title><link>https://icyleaf.com/tags/%E8%B1%86%E7%93%A3/</link><description>Recent content in 豆瓣 on icyleaf</description><language>zh-cn</language><lastBuildDate>Mon, 02 May 2011 12:34:56 +0800</lastBuildDate><atom:link href="https://icyleaf.com/tags/%E8%B1%86%E7%93%A3/index.xml" rel="self" type="application/rss+xml"/><item><title>魔豆及其豆瓣 API 测试平台开源咯</title><link>https://icyleaf.com/2011/05/modou-and-douban-api-console-is-open-source-now/</link><pubDate>Mon, 02 May 2011 12:34:56 +0800</pubDate><guid>https://icyleaf.com/2011/05/modou-and-douban-api-console-is-open-source-now/</guid><description>&lt;p>这是作为 2011 年 5 月 1 日劳动节的福利发放，欢迎各位 Kohana 开发者及其爱好者围观领取，领取内容及其使用方式请前往本人 Github 的项目地址：https://github.com/icyleaf/modou&lt;/p>...</description><content:encoded>&lt;p>这是作为 2011 年 5 月 1 日劳动节的福利发放，欢迎各位 Kohana 开发者及其爱好者围观领取，领取内容及其使用方式请前往本人 Github 的项目地址：https://github.com/icyleaf/modou&lt;/p>
</content:encoded></item><item><title>Douban API Package 发布！</title><link>https://icyleaf.com/2010/01/douban-api-package/</link><pubDate>Fri, 08 Jan 2010 12:34:56 +0800</pubDate><guid>https://icyleaf.com/2010/01/douban-api-package/</guid><description>&lt;p>Douban API Package 是一个使用 PHP 开发且基于 Kohana v3 开发的一个扩展（Module）。&lt;/p>
&lt;p>它对&lt;a href="http://www.douban.com/">豆瓣&lt;/a> &lt;a href="http://www.douban.com/service/apidoc/">API&lt;/a> 进行重新封包。它使用起来非常方便，可以快速开发一个 web 应用。&lt;/p>
&lt;p>&lt;strong>为什么要另外封包？&lt;/strong>&lt;/p>...</description><content:encoded><![CDATA[<p>Douban API Package 是一个使用 PHP 开发且基于 Kohana v3 开发的一个扩展（Module）。</p>
<p>它对<a href="http://www.douban.com/">豆瓣</a> <a href="http://www.douban.com/service/apidoc/">API</a> 进行重新封包。它使用起来非常方便，可以快速开发一个 web 应用。</p>
<p><strong>为什么要另外封包？</strong></p>
<p>对，豆瓣官方提供了一种 PHP 的解决方案，可是需要庞大的支持库：GData（20M左右）以及可能无法修改的环境配置（租用的空间主机会遇到这样的问题）。虽说 Douban API Package 也是基于框架开发，不过 Kohana 是一个纯 PHP5 模式且体积小巧（仅有 478KB），优秀迅捷的框架。<strong>最重要的是</strong>，Douban API Package 提供了目前官方所有功能的支持。并有线上网站：<a href="http://modou.us/">魔豆</a> 和<a href="http://modou.us/console">豆瓣 API 控制台</a>长期运营。</p>
<p><em>虽然它是基于 Kohana 框架开发，但是并没有使用太多的依赖，稍微熟悉可以轻松分离出来！</em></p>
<p><strong>安装需求</strong></p>
<ul>
<li>PHP 5.2+ with curl module</li>
<li><a href="http://github.com/kohana/kohana">Kohana v3</a> - 一款纯 PHP 5 框架，它的特点就是<strong>高安全性</strong>，<strong>轻量级代码</strong>，<strong>容易使用</strong>。</li>
</ul>
<p><strong>安装步骤</strong></p>
<p>步骤 0: 部署 Kohana v3</p>
<p>下载并安装 Kohana v3 的过程，请大家参考此教程：<a href="http://kohanaphp.cn/guide/tutorials.git">使用 Git 部署 Kohana 系统</a></p>
<p>步骤 1: 下载本扩展!</p>
<p>你可以在部署完毕的 Kohana 系统的根目录执行下面操作：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="ln">1</span><span class="cl">$ git submodule add git://github.com/icyleaf/douban.git modules/douban
</span></span></code></pre></div><p>完成！</p>
<p>或者你也可以从本<a href="http://github.com/icyleaf/douban">github 项目</a> 下载压缩包放置在 modules 文件夹下面。</p>
<p>步骤 2: 在 <code>bootstrap.php</code> 文件中启用该模块(默认情况下，存储在 <code>application</code> 文件夹)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="ln"> 1</span><span class="cl">/** * Enable modules. Modules are referenced by a relative or absolute path. *
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">/Kohana::modules(array(
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">	&#39;douban&#39;        =&gt; MODPATH.&#39;douban&#39;,     // Douban API Module    //
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">	&#39;database&#39;   =&gt; MODPATH.&#39;database&#39;,   // Database access    //
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">	&#39;image&#39;      =&gt; MODPATH.&#39;image&#39;,      // Image manipulation    //
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">	&#39;orm&#39;        =&gt; MODPATH.&#39;orm&#39;,        // Object Relationship Mapping (not complete)    //
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">	&#39;pagination&#39; =&gt; MODPATH.&#39;pagination&#39;, // Paging of results    //
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">	&#39;paypal&#39;     =&gt; MODPATH.&#39;paypal&#39;,     // PayPal integration (not complete)    //
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">	&#39;todoist&#39;    =&gt; MODPATH.&#39;todoist&#39;,    // Todoist integration    //
</span></span><span class="line"><span class="ln">10</span><span class="cl">	&#39;unittest&#39;   =&gt; MODPATH.&#39;unittest&#39;,   // Unit testing    // &#39;codebench&#39;  =&gt; MODPATH.
</span></span><span class="line"><span class="ln">11</span><span class="cl">	&#39;codebench&#39;,  // Benchmarking tool
</span></span><span class="line"><span class="ln">12</span><span class="cl">));
</span></span></code></pre></div><p><strong>目录结构</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="ln"> 1</span><span class="cl">douban
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">   +--- classes
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">   			+--- controller               # 豆瓣样例
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">   					+--- douban                   # Douban API Package
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">   							+--- api               # Douban API
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">   							+--- core.php          # Douban Core
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">   							+--- oauth.php         # Douban OAuth
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">   							+--- request.php       # Douban Requset
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">						   	+--- response.php      # Douban Response
</span></span><span class="line"><span class="ln">10</span><span class="cl">					+--- douban.php               # Douban API Class
</span></span><span class="line"><span class="ln">11</span><span class="cl">   +--- config
</span></span><span class="line"><span class="ln">12</span><span class="cl">   			+--- douban.php               # 豆瓣 API 配置文件
</span></span><span class="line"><span class="ln">13</span><span class="cl">   			+--- user_agents.php          # 奉送给大家一些手机 User agent 配置文件
</span></span><span class="line"><span class="ln">14</span><span class="cl">   +--- media
</span></span><span class="line"><span class="ln">15</span><span class="cl">   			+--- images                   # 奉送给大家豆瓣 API 用到的图像
</span></span><span class="line"><span class="ln">16</span><span class="cl">   +--- vendor
</span></span><span class="line"><span class="ln">17</span><span class="cl">   			+--- OAuth.php                # OAuth 官方推荐 PHP 库
</span></span><span class="line"><span class="ln">18</span><span class="cl">   			+--- LICENSE
</span></span><span class="line"><span class="ln">19</span><span class="cl">   +--- README.markdown
</span></span></code></pre></div><p><strong>快速上手</strong></p>
<p>Douban API Package 提供一些演示用例，系统部署完毕后可以通过<code>http://host/demo_douban</code> 访问。</p>
<p>文件路径：<code>classes/controller/douban_demo.php</code></p>
<p>源码库：<a href="http://github.com/icyleaf/douban">http://github.com/icyleaf/douban</a></p>
<p>祝你开发顺利！</p>
<p>如果任何疑问或者 Bugs 反馈，即可以在本项目中提交 Issue
或者给我发邮件：icyleaf.cn囧gmail.com （请替换 &ldquo;囧&rdquo; 为 @）</p>
]]></content:encoded></item><item><title>豆瓣API测试控制台</title><link>https://icyleaf.com/2009/07/douban-api-console/</link><pubDate>Mon, 06 Jul 2009 12:34:56 +0800</pubDate><guid>https://icyleaf.com/2009/07/douban-api-console/</guid><description>&lt;blockquote>
&lt;p>项目已开源: &lt;a href="http://github.com/icyleaf/modou">http://github.com/icyleaf/modou&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>豆瓣 API 测试控制台的创造灵感来源于 Facebook Developers Tools 中的&lt;a href="http://developers.facebook.com/tools.php">Facebook API Console&lt;/a>， 或许大家知道，魔豆是我的另外一个豆瓣 API 应用，由于是自己封装的 Douban
API（官方提供的库类要求太多，安装繁琐，这不属于我喜爱简洁，轻便的风格），每次想查看某个
API 接口返回的数据都要写一个 test 跑一下。麻烦不说，还容易出错，于是，使用自己封装的 Douban API，借鉴 Facebook API Console
的界面和类似的功能显示，终于小有所成，其中为了实现此控制台，封包的库类经过两次大改，虽然改的很辛苦，但从中学到了很多开发经验。&lt;/p>...</description><content:encoded><![CDATA[<blockquote>
<p>项目已开源: <a href="http://github.com/icyleaf/modou">http://github.com/icyleaf/modou</a></p>
</blockquote>
<p>豆瓣 API 测试控制台的创造灵感来源于 Facebook Developers Tools 中的<a href="http://developers.facebook.com/tools.php">Facebook API Console</a>， 或许大家知道，魔豆是我的另外一个豆瓣 API 应用，由于是自己封装的 Douban
API（官方提供的库类要求太多，安装繁琐，这不属于我喜爱简洁，轻便的风格），每次想查看某个
API 接口返回的数据都要写一个 test 跑一下。麻烦不说，还容易出错，于是，使用自己封装的 Douban API，借鉴 Facebook API Console
的界面和类似的功能显示，终于小有所成，其中为了实现此控制台，封包的库类经过两次大改，虽然改的很辛苦，但从中学到了很多开发经验。</p>
<p>测试用户必须先进行用户验证才能进行测试，这主要是为了：</p>
<ol>
<li>避免提交查询中出现错误，并让测试者使用到全部API方法</li>
<li>防止恶意用户利用它做二次api调用，由于测试控制台的传输很简单，提交参数即可查询。</li>
</ol>
<p>查询方法：</p>
<ol>
<li>进行用户的登录验证</li>
<li>选择返回的数据类型（支持官方提供的 XML 和 JSON格式）</li>
<li>选择需要查询的API方法（这里我做了分类）</li>
<li>如果查询的方法存在参数，会在方法下面显示。</li>
<li>设置完毕参数后，点击“调用此方法”，稍等片刻即可。</li>
</ol>
<p>返回的数据结果会在右侧显示出来，其中，右上部分是调用相关 API 的 URL 地址；右下部分是返回的数据结果。</p>
<p>如果，参数设置错误，或者其他问题，返回的结果会以 [CODE] Content
的格式返回，其中 <strong>CODE</strong>代码返回的状态码，<strong>Content</strong> 是返回的信息。</p>
<p>通用参数解释：</p>
<ul>
<li>id  - 查询方法涉及到的 id 值（人，书影音，日记，广播，豆邮，同城等）</li>
<li>message - 广播发送的内容</li>
<li>title - 日记，豆邮的标题</li>
<li>content - 主题内容</li>
<li>city - 同城活动的城市代号（根据我判断，应该是中文的拼音，详细请看<a href="http://www.douban.com/location/world/">官方同城列表</a>中各个城市的url）</li>
<li>query - 搜索的关键字</li>
<li>index - 返回多个元素时，起始元素的下标（相当于豆瓣 api 文档中的start-index）</li>
<li>max - 返回多个entry时，每页最多的结果数（相当于豆瓣 api 文档中的max-results）</li>
</ul>
<p>其中某些方法（涉及到自身的数据，比如我的信息，我的广播，我的同城）在进行查询的时候可以把
id 留空或者设置为 ‘me’ （不带引号），这样调用结果显示的是自己的信息。</p>
<p>如果长时间(大于1分钟)处于“调用中”，可能是由于程序问题，请刷新后重试。</p>
<p>已知存在的问题：</p>
<ol>
<li>界面和方法列表在 Chrome 浏览器有不兼容的问题出现</li>
<li>返回数据结果头一行多出一个类似水平制表符的转义符似的</li>
</ol>
<p>由于目前为止豆瓣 API 还没有封装完成，现只提供用户，广播，书影音，豆邮和日记的不完全功能测试查询。
其余的 API 会尽快添加进去 :)</p>
<p>测试地址：<a href="http://ews.im/douban_console">http://ews.im/douban_console</a></p>
]]></content:encoded></item><item><title>魔豆：豆瓣网非官方移动版本</title><link>https://icyleaf.com/2009/06/modou/</link><pubDate>Mon, 22 Jun 2009 12:34:56 +0800</pubDate><guid>https://icyleaf.com/2009/06/modou/</guid><description>&lt;blockquote>
&lt;p>项目已开源: &lt;a href="http://github.com/icyleaf/modou">http://github.com/icyleaf/modou&lt;/a> 但不再维护。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="http://modou.us" title="魔豆：豆瓣网非官方移动版本">魔豆&lt;/a>，一个&lt;a href="http://douban.com">豆瓣网&lt;/a>非官方移动版本，基于&lt;a href="http://www.douban.com/service/apidoc/" title="豆瓣 API">豆瓣
API&lt;/a>开发的专门为移动终端（手持设备）定制的豆瓣移动版本。魔豆专注于豆瓣网的&lt;strong>广播&lt;/strong>及&lt;strong>同城活动&lt;/strong>。&lt;/p>
&lt;p>魔豆的来历：豆瓣移动版 -&amp;gt; Douban mobile -&amp;gt; moDouban -&amp;gt; moDou -&amp;gt;魔豆&lt;/p>...</description><content:encoded><![CDATA[<blockquote>
<p>项目已开源: <a href="http://github.com/icyleaf/modou">http://github.com/icyleaf/modou</a> 但不再维护。</p>
</blockquote>
<p><a href="http://modou.us" title="魔豆：豆瓣网非官方移动版本">魔豆</a>，一个<a href="http://douban.com">豆瓣网</a>非官方移动版本，基于<a href="http://www.douban.com/service/apidoc/" title="豆瓣 API">豆瓣
API</a>开发的专门为移动终端（手持设备）定制的豆瓣移动版本。魔豆专注于豆瓣网的<strong>广播</strong>及<strong>同城活动</strong>。</p>
<p>魔豆的来历：豆瓣移动版 -&gt; Douban mobile -&gt; moDouban -&gt; moDou -&gt;魔豆</p>
<p>目前魔豆发布的功能：</p>
<ol>
<li>友邻广播：支持显示广播，回复发起人和重播（重复发布其他发起者的广播）</li>
<li>同城活动：查看自己参与（包含参加/感兴趣）的活动以及用户所在城市的同城活动（需提前在豆瓣设置）</li>
<li>查看用户相册以及同城活动相册（仅限于从友邻广播）</li>
<li>搜索用户/书影音/同城活动</li>
<li>查看用户/书影音/同城活动信息</li>
<li>显示和查阅豆邮</li>
</ol>
<p>我，是一个重度豆瓣使用者，也许这和身在北京这所繁华的帝都有很大的关系。虽然豆瓣网直到现在为其定位在书影音这三大模块，但不可否认的，豆瓣小组，豆瓣广播，豆瓣同城甚至豆邮都起着重要的标志性作用。</p>
<p>或许和大家一样，一直期待着豆瓣网能够推出移动版本，可以用手机或其他移动设备查查书影音，看看友邻广播和未读豆邮，浏览下所在城市的同城活动，
光想想都是这么的惬意，于是我们在等，一直在等，几乎使我望穿秋水的时候，还是杳无音讯。平时在有 WIFI 网络的情况下，
使用 iTouch 访问一下豆瓣网还是可以，如果离开了它，以为这必须使用较昂贵的 GPRS 网络，经过漫长的 loading 才能看到自己感兴趣或自己想看的一点点信息&hellip;</p>
<p>于是，自己何不使用豆瓣API开发一个呢？紧接着通过查阅大量的文档和官方提供的演示代码，抛弃
Zend Framework 和 Gdata，使用自己维护中文化的 <a href="http://khnfans.cn" title="Kohana 中文爱好者">Kohana</a>框架，一点一点的搭建起了基础库，通过一个星期多的时间，开始一边做页面的展现，另一边继续完善基础库，直到目前为止，大体的框架已经完成，下面需要考虑如何对细节做修改和完善。</p>
<p>另外，由于 PHP 没有低耦合的 HTTP requset class，自己使用 curl 函数一点点抠出来的一个 RESTFul requset class，在进行提交 POST，PUT，DELETE 方法还存在一些技术问题，所以魔豆目前还不支持对书影音，同城活动进行操作（包含，想读/听/看，感兴趣，我要参加等等），我会尽快完善。</p>
<p>开发环境： <strong>Windows XP + XAMPP + E-texteditor</strong> (Office work) AND
<strong>Ubuntu 9.04 + XAMPP + Aptana</strong> (Laptop)</p>
<p>调试设备：iPod Touch + Blackberry 8310 + Nokia N-GAGE QD</p>
<p>由于设备有限，可能在其他设备上会出现设备误判或UI上的问题（大家可以在本日志下面留下误判设备型号），敬请谅解。后期会对不同设备进行专门的优化
:)</p>
<p>网站：<a href="http://modou.us">http://modou.us</a></p>
<p>开发进度：<a href="http://modou.us/timeline">http://modou.us/timeline</a></p>
<p>相关截图：<a href="http://www.getdropbox.com/gallery/45081/1/modou?h=b26d7e">http://www.getdropbox.com/gallery/45081/1/modou?h=b26d7e</a></p>
<p>欢迎大家前来测试和使用，心情愉快。</p>
<blockquote>
<p>更新于 2009年06月22日：由于 China Mobile 的原因，黑莓手机默认浏览器无法判别，请黑莓用户使用 Opera Mini 或其他浏览器访问，原因请看<a href="http://www.douban.com/group/topic/6946152/">这里</a>。</p>
</blockquote>
]]></content:encoded></item></channel></rss>