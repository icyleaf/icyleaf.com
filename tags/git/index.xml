<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on icyleaf</title>
    <link>https://icyleaf.com/tags/git/</link>
    <description>Recent content in Git on icyleaf</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>All rights reserved - 2019</copyright>
    <lastBuildDate>Fri, 27 Apr 2018 18:12:23 +0800</lastBuildDate>
    
	<atom:link href="https://icyleaf.com/tags/git/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ḫpr - 最好用的 git 仓库镜像同步工具</title>
      <link>https://icyleaf.com/2018/04/intro-hpr/</link>
      <pubDate>Fri, 27 Apr 2018 18:12:23 +0800</pubDate>
      
      <guid>https://icyleaf.com/2018/04/intro-hpr/</guid>
      <description>ḫpr 是一个把任意 git 仓库的镜像到 gitlab 服务的同步工具，还支持定期同步的功能。 特性: 支持 Web API 接口，可用于远程控制不仅限于终端使用 支持终端命令控制，</description>
    </item>
    
    <item>
      <title>Puma 替换 Unicorn 跑 Gitlab</title>
      <link>https://icyleaf.com/2014/01/moving-unicorn-to-puma-on-gitlab/</link>
      <pubDate>Sun, 26 Jan 2014 12:34:56 +0800</pubDate>
      
      <guid>https://icyleaf.com/2014/01/moving-unicorn-to-puma-on-gitlab/</guid>
      <description>前篇介绍到如何在《CentoOS 上面安装 Gitlab》一文，gitlab 默认使用的是 unicorn 作为内部的 app server，再用 nginx 做代理转发。之前是在公</description>
    </item>
    
    <item>
      <title>Git 和 Pager 的那点事</title>
      <link>https://icyleaf.com/2013/10/about-pager-on-git/</link>
      <pubDate>Wed, 16 Oct 2013 12:34:56 +0800</pubDate>
      
      <guid>https://icyleaf.com/2013/10/about-pager-on-git/</guid>
      <description>Git 几乎所有命令都提供分页器，即当命令输出超过一页时，自动在每页输出后暂停，可以按空格继续显示，按 q 退出。 默认 git 的 pager = less -FRSX，这个可以通</description>
    </item>
    
    <item>
      <title>如何在 CentOS 上安装 Gitlab</title>
      <link>https://icyleaf.com/2013/09/how-to-install-gitlab-on-centos/</link>
      <pubDate>Tue, 17 Sep 2013 12:34:56 +0800</pubDate>
      
      <guid>https://icyleaf.com/2013/09/how-to-install-gitlab-on-centos/</guid>
      <description>2013 年 08 月的 OpenParty &amp;ldquo;花事如期&amp;rdquo; 活动上，晓东在他的机器上演示了自建 Gitlab 的项目，看到 Gitlab 目前已经比较成熟，而不像早期寒碜的界面，这</description>
    </item>
    
    <item>
      <title>如何保持在 Git Submodule 代码的开放和私有共存</title>
      <link>https://icyleaf.com/2012/08/how-to-keep-public-and-private-versions-of-a-git-submodule-repo-in-sync/</link>
      <pubDate>Fri, 03 Aug 2012 12:34:56 +0800</pubDate>
      
      <guid>https://icyleaf.com/2012/08/how-to-keep-public-and-private-versions-of-a-git-submodule-repo-in-sync/</guid>
      <description>假设我在 github 有一个开源的版本库 x 供大家使用，该库里面又包含了好些个 submodules，其中有一个 submodule 名为 a 是自己在 github 又创建的: $ git submodule add http://github.com/icyleaf/a.git modules/a 现在</description>
    </item>
    
    <item>
      <title>使用 Git Hooks 实现自动项目部署</title>
      <link>https://icyleaf.com/2012/03/apps-auto-deploy-with-git/</link>
      <pubDate>Wed, 14 Mar 2012 12:34:56 +0800</pubDate>
      
      <guid>https://icyleaf.com/2012/03/apps-auto-deploy-with-git/</guid>
      <description>最近在某服务器上面搭建 git 开发和部署环境，git 开发环境很简单，按照 ProGit 一书的相关知识就可以轻松搞定，实现了类似 Github 的使用 SSH + 私有 Clone 的方式。 关于部</description>
    </item>
    
    <item>
      <title>几本和 Git 相关的书</title>
      <link>https://icyleaf.com/2009/09/books-about-git/</link>
      <pubDate>Mon, 28 Sep 2009 12:34:56 +0800</pubDate>
      
      <guid>https://icyleaf.com/2009/09/books-about-git/</guid>
      <description>切换到 Git开发已经有一段的时间了，之前一直在使用 svn，现在部分代码还在 Google Code 托管。不过自换了 Git 之后发现 Git 更方便且效率更高，不过用来用去常用</description>
    </item>
    
    <item>
      <title>初学 git 入门</title>
      <link>https://icyleaf.com/2008/11/new-guy-to-git/</link>
      <pubDate>Fri, 07 Nov 2008 12:34:56 +0800</pubDate>
      
      <guid>https://icyleaf.com/2008/11/new-guy-to-git/</guid>
      <description>Git 是用于 Linux 内核开发的版本控制工具。与常用的版本控制工具 CVS, Subversion 等不同，它采用了分布式版本库的方式，不必服务器端软件支持，使源代码的发布和交流极其</description>
    </item>
    
  </channel>
</rss>