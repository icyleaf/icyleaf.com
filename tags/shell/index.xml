<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Shell on icyleaf</title><link>https://icyleaf.com/tags/shell/</link><description>Recent content in Shell on icyleaf</description><language>zh</language><lastBuildDate>Tue, 06 Nov 2012 12:34:56 +0800</lastBuildDate><atom:link href="https://icyleaf.com/tags/shell/index.xml" rel="self" type="application/rss+xml"/><item><title>修复 OS X 打开方式的重复项</title><link>https://icyleaf.com/2012/11/%E4%BF%AE%E5%A4%8D-os-x-%E6%89%93%E5%BC%80%E6%96%B9%E5%BC%8F%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9/</link><pubDate>Tue, 06 Nov 2012 12:34:56 +0800</pubDate><guid>https://icyleaf.com/2012/11/%E4%BF%AE%E5%A4%8D-os-x-%E6%89%93%E5%BC%80%E6%96%B9%E5%BC%8F%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9/</guid><description>$ /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/Support/lsregister -kill -r -domain local -domain system-domainuser</description><content:encoded>&lt;pre tabindex="0">&lt;code>$ /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/Support/lsregister -kill -r -domain local -domain system-domainuser
&lt;/code>&lt;/pre></content:encoded></item><item><title>如何针对 iOS 设备进行网络抓包分析</title><link>https://icyleaf.com/2012/10/%E5%A6%82%E4%BD%95%E9%92%88%E5%AF%B9-ios-%E8%AE%BE%E5%A4%87%E8%BF%9B%E8%A1%8C%E7%BD%91%E7%BB%9C%E6%8A%93%E5%8C%85%E5%88%86%E6%9E%90/</link><pubDate>Mon, 15 Oct 2012 12:34:56 +0800</pubDate><guid>https://icyleaf.com/2012/10/%E5%A6%82%E4%BD%95%E9%92%88%E5%AF%B9-ios-%E8%AE%BE%E5%A4%87%E8%BF%9B%E8%A1%8C%E7%BD%91%E7%BB%9C%E6%8A%93%E5%8C%85%E5%88%86%E6%9E%90/</guid><description>Charles 目前是 OS X 上面最好的抓包分析软件，相比 WireShark 功能更加强大，并支持代理功能。 iPad HTTP Debugging with Charles - 教大家如何使用它进行代理抓包 Testing / Tethering Data Driven Mobile Apps with Charles and OSX - 教大...</description><content:encoded><![CDATA[<p>Charles 目前是 OS X 上面最好的抓包分析软件，相比 WireShark 功能更加强大，并支持代理功能。</p>
<ol>
<li><a href="http://www.ravelrumba.com/blog/ipad-http-debugging/">iPad HTTP Debugging with Charles</a> - 教大家如何使用它进行代理抓包</li>
<li><a href="http://www.skinkers.com/2012/06/12/testing-tethering-data-driven-mobile-apps-with-charles-and-osx-ipad-iphone-http-debugging/">Testing / Tethering Data Driven Mobile Apps with Charles and OSX</a> - 教大家如何进行 request remap，适合不改动代码的情况下修改域名切换环境</li>
</ol>
<p>不过 Charles 的确定就是共享软件，未注册版本可以使用全功能但是限制是只能允许使用 30 分钟，那么&hellip;习惯用 Terminal 的还有一个方法：<a href="http://useyourloaf.com/blog/2012/02/07/remote-packet-capture-for-ios-devices.html">Remote Packet Capture for iOS Devices</a></p>
<pre tabindex="0"><code>$ rvictl -s &lt;UDID&gt;
$ rvictl -l
$ tcpdump -n -t -i rvi0 -q tcp
</code></pre>]]></content:encoded></item><item><title>友盟 iOS 发布渠道自动化脚本</title><link>https://icyleaf.com/2012/05/ios-publish-channel-packger-for-umeng/</link><pubDate>Thu, 10 May 2012 12:34:56 +0800</pubDate><guid>https://icyleaf.com/2012/05/ios-publish-channel-packger-for-umeng/</guid><description>现在公司的大多数手机项目的统计服务都是用的友盟，而自使用之初到现在都有一个渠道管理的功能，这个最后打包的时候实际上可能会产生一点点的麻烦，最...</description><content:encoded><![CDATA[<p>现在公司的大多数手机项目的统计服务都是用的<a href="http:///www.umeng.com">友盟</a>，而自使用之初到现在都有一个渠道管理的功能，这个最后打包的时候实际上可能会产生一点点的麻烦，最早第一个 app 发布的时候，写了一个半自动的脚本，凑合用了很久，现在觉得需要完全自动化，于是借鉴之前 <a href="http://icyleaf.com/2012/04/automating-script-to-testFlight-from-xcode/">testflightapp 的自动化脚本</a>，重新改造脚本。</p>
<p>实现分两部分：</p>
<ul>
<li>iOS 代码</li>
<li>自动化脚本</li>
</ul>
<p>实现原理很简单，我利用一个文本文件放置在项目当中（比如：<code>PublishChannel.txt</code>），里面只需要存上发布渠道的名字，默认是 <code>App Store</code>。在代码中只需要想友盟调用函数的时候，读取这个文件即可。只需要做这样简单的工作就结束了 iOS 代码部分的工作。</p>
<p>主要的功能基本上都是由自动化脚本完成。因为它要去标记分发渠道，处理打包工作：</p>
<ol>
<li>打包需要一个符合官方发布要求的 Icon，即 512x512 px，PNG 格式且名字必须是 <code>iTunesArtwork</code> （不能包含后缀，无比保证在终端检查）</li>
<li>修改 PublishChannel.txt 的分发渠道</li>
<li>同时需要把 .app 的文件放在 <code>Payload</code> 并和 <code>iTunesArtwork</code> 一起打成 ipa 包（实际上就是一个 zip，改成了 ipa）</li>
</ol>
<p>这样看起来其实工作也不复杂，只不过分发渠道多了就是有些浪费时间。同样还是采用了 Archive 的 Post-Action，这里面可以插入脚本以及外部的调用脚本（如果看不到下面的具体代码，请<a href="https://gist.github.com/2650508">点击这里</a>：</p>
<!-- raw HTML omitted -->
]]></content:encoded></item><item><title>获取公网 IP</title><link>https://icyleaf.com/2012/05/fetch-public-ip/</link><pubDate>Wed, 09 May 2012 12:34:56 +0800</pubDate><guid>https://icyleaf.com/2012/05/fetch-public-ip/</guid><description>$ curl -s http://checkip.dyndns.org | grep -Eo &amp;#39;([0-9]{1,3}\\.){3}[0-9]{1,3}&amp;#39;</description><content:encoded><![CDATA[<pre tabindex="0"><code>$ curl -s http://checkip.dyndns.org | grep -Eo &#39;([0-9]{1,3}\\.){3}[0-9]{1,3}&#39;
</code></pre>]]></content:encoded></item><item><title>OSX</title><link>https://icyleaf.com/2010/12/switer-between-finder-and-terminal-in-osx/</link><pubDate>Wed, 08 Dec 2010 12:34:56 +0800</pubDate><guid>https://icyleaf.com/2010/12/switer-between-finder-and-terminal-in-osx/</guid><description>在 Finder 打开 Terminal 并切换到当前目录 安装一个开源的 Finder 辅助工具：cdto。功能只有一个就是实现在 Finder 打开 Terminal 并切换到当前 Finder 目录。找到你系统的版本的 app （支持当...</description><content:encoded><![CDATA[<p><strong>在 Finder 打开 Terminal 并切换到当前目录</strong></p>
<p>安装一个开源的 Finder 辅助工具：<a href="http://code.google.com/p/cdto/">cdto</a>。功能只有一个就是实现在 Finder
打开 Terminal 并切换到当前 Finder 目录。找到你系统的版本的 app （支持当前
OS X 10.4 以上版本，应该都是雪豹了 吧）拷贝到 Applications 下并把它拖到
Finder 的工具栏上即可。</p>
<p><strong>从 Terminal 中用 Finder 打开当前路径的目录</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">$ open .
</span></span></code></pre></div><p>PS，如果是 Ubuntu 系统的话请安装 nautilus，然后在 Terminal 里面输入</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">$ nautilus .
</span></span></code></pre></div>]]></content:encoded></item></channel></rss>