<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Rails on icyleaf</title><link>https://icyleaf.com/tags/rails/</link><description>Recent content in Rails on icyleaf</description><language>zh</language><lastBuildDate>Fri, 16 Sep 2022 13:58:31 +0800</lastBuildDate><atom:link href="https://icyleaf.com/tags/rails/index.xml" rel="self" type="application/rss+xml"/><item><title>Rails 产品环境配置加密凭证的完美方案</title><link>https://icyleaf.com/2022/09/perfect-solution-to-steup-rails-encrypted-credentials/</link><pubDate>Fri, 16 Sep 2022 13:58:31 +0800</pubDate><guid>https://icyleaf.com/2022/09/perfect-solution-to-steup-rails-encrypted-credentials/</guid><description>面向用户的项目如何保证数据安全的情况下给用户提供一个便捷部署方式</description><content:encoded><![CDATA[<p>续接上文，项目已经构建镜像后下一步大概率就要开始面向受众人群去传播使用。你有想过让用户自建服务时他要踩的坑吗？那绝对就是加密凭证的配置。</p>
<h2 id="rails-教你这么做">Rails 教你这么做</h2>
<p>很遗憾除了 Rails 寥寥几笔的配置以外你几乎找不到任何不一样的文章。加密凭证的文件结构如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="ln">1</span><span class="cl">├── config
</span></span><span class="line"><span class="ln">2</span><span class="cl">│  ├── master.key           <span class="c1"># 核心私钥</span>
</span></span><span class="line"><span class="ln">3</span><span class="cl">│  ├── credentials.yml.enc  <span class="c1"># 加密凭证</span>
</span></span><span class="line"><span class="ln">4</span><span class="cl">│  └── ...
</span></span></code></pre></div><p><code>master.key</code> 是某种算法随机生成的加密串，<code>credentials.yml.enc</code> 是存储了各种 key、token、secret value 的 YAML 数据加密后的凭证数据。</p>
<p>Rails 以安全为由（我猜的）对开发者也“封闭”了加密过程，只能通过 <code>rails credentials:edit</code> 命令解密 YAML 数据才能编辑和保存。最致命的该命令是使用 <code>EDITOR</code> 环境变量配置的文本编辑器，这个通常是 vim, nano 等终端文本编辑器。</p>
<p>这就需要在部署项目的时候无法一键部署，必须在部署前让使用者敲一堆的命令、还要在终端的文本编辑器再敲一堆需要配置的数据。</p>
<p>我想不仅使用者会疯掉，很多 Rails 开发者或许也会发怵。</p>
<h2 id="我的最佳实践">我的最佳实践</h2>
<blockquote>
<p>截止 2022-10-20 为止适用于 Rails 7.x 版本。</p>
</blockquote>
<p>上面提到的“封闭”的意思是使用者不可见加解密过程，但可通过<a href="https://github.com/rails/rails/blob/7-0-stable/railties/lib/rails/commands/credentials/credentials_command.rb">开源代码</a>一探究竟。</p>
<p>我的思路很简单，不提前生成和挂载上面两个文件，通过设置 <code>RAILS_MASTER_KEY</code> 和 <code>RAILS_ENCRYPTED_CREDENTIALS</code> 两个环境变量再变相实现。</p>
<ul>
<li>
<p><code>RAILS_MASTER_KEY</code> 是 Rails 内置的变量，它会<a href="https://github.com/rails/rails/blob/7-0-stable/activesupport/lib/active_support/encrypted_file.rb#L53">优先读取</a>最后才会读取 <code>config/master.key</code>。</p>
</li>
<li>
<p><code>RAILS_ENCRYPTED_CREDENTIALS</code> 环境变量保存 <code>credentials.yml.enc</code> 文件的加密凭证数据，项目启动阶段通过脚本预处理。</p>
</li>
</ul>
<h3 id="加密凭证生成器">加密凭证生成器</h3>
<p>面向用户自动化配置，这就意味着需要项目开发者提供傻瓜式的配置工具。</p>













  
  <figure><img src="/uploads/2022/09/16/generate-encrypted-credentials-tools.png"/><figcaption>

    <h4>加密凭证生成器</h4><div style="clear: both"></div>
  </figcaption></figure>

<p>上面是一个实现功能的基础版本，如果部署方式是 Docker 或 docker-compose 也可以提供生成对应的部署脚本或文件。</p>
<h4 id="核心源码">核心源码</h4>
<p>生成规则均借鉴 Rails 内部 <code>ActiveSupport::EncryptedFile</code> 和 <code>ActiveSupport::EncryptedConfiguration</code> 逻辑，数据库加密参考 <a href="https://github.com/rails/rails/blob/7-0-stable/activerecord/lib/active_record/railties/databases.rake#L531">database.rake</a>：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-ruby" data-lang="ruby"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="k">def</span> <span class="nf">create</span>
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">  <span class="n">env_key</span> <span class="o">=</span> <span class="s2">&#34;TEMP_MASTER_KEY&#34;</span>
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">  <span class="no">ENV</span><span class="o">[</span><span class="n">env_key</span><span class="o">]</span> <span class="o">=</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">EncryptedConfiguration</span><span class="o">.</span><span class="n">generate_key</span>
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">  <span class="n">generator</span> <span class="o">=</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">EncryptedConfiguration</span><span class="o">.</span><span class="n">new</span><span class="p">(</span>
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">    <span class="ss">config_path</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">    <span class="ss">key_path</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">    <span class="ss">env_key</span><span class="p">:</span> <span class="n">env_key</span><span class="p">,</span>
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">    <span class="ss">raise_if_missing_key</span><span class="p">:</span> <span class="kp">false</span>
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">  <span class="p">)</span>
</span></span><span class="line"><span class="ln">10</span><span class="cl">
</span></span><span class="line"><span class="ln">11</span><span class="cl">  <span class="n">master_key</span> <span class="o">=</span> <span class="n">generator</span><span class="o">.</span><span class="n">key</span>
</span></span><span class="line"><span class="ln">12</span><span class="cl">  <span class="n">contents</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">13</span><span class="cl">    <span class="s2">&#34;secret_key_base&#34;</span> <span class="o">=&gt;</span> <span class="no">SecureRandom</span><span class="o">.</span><span class="n">alphanumeric</span><span class="p">(</span><span class="mi">64</span><span class="p">),</span>
</span></span><span class="line"><span class="ln">14</span><span class="cl">    <span class="s2">&#34;active_record_encryption&#34;</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">15</span><span class="cl">      <span class="s2">&#34;primary_key&#34;</span> <span class="o">=&gt;</span> <span class="no">SecureRandom</span><span class="o">.</span><span class="n">alphanumeric</span><span class="p">(</span><span class="mi">32</span><span class="p">),</span>
</span></span><span class="line"><span class="ln">16</span><span class="cl">      <span class="s2">&#34;deterministic_key&#34;</span> <span class="o">=&gt;</span> <span class="no">SecureRandom</span><span class="o">.</span><span class="n">alphanumeric</span><span class="p">(</span><span class="mi">32</span><span class="p">),</span>
</span></span><span class="line"><span class="ln">17</span><span class="cl">      <span class="s2">&#34;key_derivation_salt&#34;</span> <span class="o">=&gt;</span> <span class="no">SecureRandom</span><span class="o">.</span><span class="n">alphanumeric</span><span class="p">(</span><span class="mi">32</span><span class="p">),</span>
</span></span><span class="line"><span class="ln">18</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">19</span><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="ln">20</span><span class="cl">
</span></span><span class="line"><span class="ln">21</span><span class="cl">  <span class="no">ENV</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="n">env_key</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">22</span><span class="cl">  <span class="n">render</span> <span class="ss">json</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">23</span><span class="cl">    <span class="ss">master_key</span><span class="p">:</span> <span class="n">master_key</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">24</span><span class="cl">    <span class="ss">encrypted_credentials</span><span class="p">:</span> <span class="n">generator</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="ss">:encrypt</span><span class="p">,</span> <span class="no">YAML</span><span class="o">.</span><span class="n">dump</span><span class="p">(</span><span class="n">contents</span><span class="p">)),</span>
</span></span><span class="line"><span class="ln">25</span><span class="cl">    <span class="ss">contents</span><span class="p">:</span> <span class="n">contents</span>
</span></span><span class="line"><span class="ln">26</span><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="ln">27</span><span class="cl"><span class="k">end</span>
</span></span></code></pre></div><h3 id="自动化处理脚本">自动化处理脚本</h3>
<p>环境变量配置的 <code>RAILS_ENCRYPTED_CREDENTIALS</code> 变量并不会被 Rails 识别，必须在依赖 Rails 相关服务运行前（包括 Sidekiq）把变量的值转换成对应的文件即可。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-ruby" data-lang="ruby"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="n">namespace</span> <span class="ss">:app</span> <span class="k">do</span>
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">  <span class="n">task</span> <span class="ss">:credentials</span> <span class="k">do</span>
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">    <span class="n">master_key_path</span> <span class="o">=</span> <span class="no">Rails</span><span class="o">.</span><span class="n">root</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;config&#39;</span><span class="p">,</span> <span class="s1">&#39;credentials&#39;</span><span class="p">,</span> <span class="s1">&#39;production.key&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">    <span class="n">encrypted_file_path</span> <span class="o">=</span> <span class="no">Rails</span><span class="o">.</span><span class="n">root</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;config&#39;</span><span class="p">,</span> <span class="s1">&#39;credentials&#39;</span><span class="p">,</span> <span class="s1">&#39;production.yml.enc&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">    <span class="n">encrypted_credentials</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;RAILS_ENCRYPTED_CREDENTIALS&#39;</span><span class="o">].</span><span class="n">presence</span>
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">    <span class="k">if</span> <span class="n">encrypted_credentials</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="o">!</span><span class="no">File</span><span class="o">.</span><span class="n">exist?</span><span class="p">(</span><span class="n">encrypted_file_path</span><span class="p">)</span> <span class="o">||</span> <span class="no">File</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">encrypted_file_path</span><span class="p">)</span><span class="o">.</span><span class="n">empty?</span><span class="p">)</span>
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">      <span class="nb">puts</span> <span class="s2">&#34;Write encrypted data into </span><span class="si">#{</span><span class="n">encrypted_file_path</span><span class="si">}</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">      <span class="no">File</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">encrypted_file_path</span><span class="p">,</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;RAILS_ENCRYPTED_CREDENTIALS&#39;</span><span class="o">]</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">10</span><span class="cl">    <span class="k">end</span>
</span></span><span class="line"><span class="ln">11</span><span class="cl">
</span></span><span class="line"><span class="ln">12</span><span class="cl">    <span class="n">encrypted</span> <span class="o">=</span> <span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">encrypted</span><span class="p">(</span><span class="n">encrypted_file_path</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">13</span><span class="cl">    <span class="k">if</span> <span class="n">encrypted</span><span class="o">.</span><span class="n">key</span><span class="o">.</span><span class="n">nil?</span>
</span></span><span class="line"><span class="ln">14</span><span class="cl">      <span class="nb">fail</span> <span class="o">[</span>
</span></span><span class="line"><span class="ln">15</span><span class="cl">        <span class="s2">&#34;Missing `RAILS_MASTER_KEY` enviroment value and not found file in </span><span class="si">#{</span><span class="n">master_key_path</span><span class="si">}</span><span class="s2">.&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">16</span><span class="cl">        <span class="s2">&#34;Make sure generate one first and store it in a safe place.&#34;</span>
</span></span><span class="line"><span class="ln">17</span><span class="cl">      <span class="o">].</span><span class="n">join</span><span class="p">(</span><span class="s2">&#34;</span><span class="se">\n</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">18</span><span class="cl">    <span class="k">end</span>
</span></span><span class="line"><span class="ln">19</span><span class="cl">
</span></span><span class="line"><span class="ln">20</span><span class="cl">    <span class="k">next</span> <span class="k">if</span> <span class="n">encrypted_credentials</span>
</span></span><span class="line"><span class="ln">21</span><span class="cl">
</span></span><span class="line"><span class="ln">22</span><span class="cl">    <span class="k">begin</span>
</span></span><span class="line"><span class="ln">23</span><span class="cl">      <span class="n">data</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">empty?</span><span class="p">(</span><span class="n">encrypted_file_path</span><span class="p">)</span> <span class="p">?</span> <span class="p">{}</span> <span class="p">:</span> <span class="p">(</span><span class="no">YAML</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="n">encrypted</span><span class="o">.</span><span class="n">read</span><span class="p">)</span> <span class="o">||</span> <span class="p">{})</span>
</span></span><span class="line"><span class="ln">24</span><span class="cl">      <span class="nb">puts</span> <span class="s2">&#34;Preparing encrypted keys: secret_key_base, active_record_encryption ...&#34;</span>
</span></span><span class="line"><span class="ln">25</span><span class="cl">
</span></span><span class="line"><span class="ln">26</span><span class="cl">      <span class="c1"># Priority: environment &gt; rails builtin &gt; credentials.yml.enc data</span>
</span></span><span class="line"><span class="ln">27</span><span class="cl">      <span class="n">data</span><span class="o">[</span><span class="s1">&#39;secret_key_base&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;SECRET_TOKEN&#39;</span><span class="o">].</span><span class="n">presence</span> <span class="o">||</span> <span class="n">data</span><span class="o">[</span><span class="s1">&#39;secret_key_base&#39;</span><span class="o">]</span> <span class="o">||</span> <span class="no">SecureRandom</span><span class="o">.</span><span class="n">alphanumeric</span><span class="p">(</span><span class="mi">32</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">28</span><span class="cl">
</span></span><span class="line"><span class="ln">29</span><span class="cl">      <span class="c1"># Support encrypted_key in model</span>
</span></span><span class="line"><span class="ln">30</span><span class="cl">      <span class="n">data</span><span class="o">[</span><span class="s1">&#39;active_record_encryption&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="ln">31</span><span class="cl">        <span class="s1">&#39;primary_key&#39;</span> <span class="o">=&gt;</span> <span class="no">SecureRandom</span><span class="o">.</span><span class="n">alphanumeric</span><span class="p">(</span><span class="mi">32</span><span class="p">),</span>
</span></span><span class="line"><span class="ln">32</span><span class="cl">        <span class="s1">&#39;deterministic_key&#39;</span> <span class="o">=&gt;</span> <span class="no">SecureRandom</span><span class="o">.</span><span class="n">alphanumeric</span><span class="p">(</span><span class="mi">32</span><span class="p">),</span>
</span></span><span class="line"><span class="ln">33</span><span class="cl">        <span class="s1">&#39;key_derivation_salt&#39;</span> <span class="o">=&gt;</span> <span class="no">SecureRandom</span><span class="o">.</span><span class="n">alphanumeric</span><span class="p">(</span><span class="mi">32</span><span class="p">),</span>
</span></span><span class="line"><span class="ln">34</span><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="ln">35</span><span class="cl">
</span></span><span class="line"><span class="ln">36</span><span class="cl">      <span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">encrypted</span><span class="p">(</span><span class="n">encrypted_file_path</span><span class="p">)</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="no">YAML</span><span class="o">.</span><span class="n">dump</span><span class="p">(</span><span class="n">data</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">37</span><span class="cl">    <span class="k">rescue</span> <span class="no">OpenSSL</span><span class="o">::</span><span class="no">Cipher</span><span class="o">::</span><span class="no">CipherError</span><span class="p">,</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">MessageEncryptor</span><span class="o">::</span><span class="no">InvalidMessage</span>
</span></span><span class="line"><span class="ln">38</span><span class="cl">      <span class="nb">puts</span> <span class="s2">&#34;Couldn&#39;t decrypt </span><span class="si">#{</span><span class="n">encrypted_file_path</span><span class="si">}</span><span class="s2">. Perhaps `RAILS_MASTER_KEY` enviroment value is incorrect?&#34;</span>
</span></span><span class="line"><span class="ln">39</span><span class="cl">    <span class="k">end</span>
</span></span><span class="line"><span class="ln">40</span><span class="cl">  <span class="k">end</span>
</span></span><span class="line"><span class="ln">41</span><span class="cl"><span class="k">end</span>
</span></span></code></pre></div><h3 id="docker-配置">Docker 配置</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="ln">1</span><span class="cl">docker run -d <span class="se">\
</span></span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="se"></span>  -e <span class="nv">RAILS_MASTER_KEY</span><span class="o">=</span><span class="s2">&#34;[master_key]&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="ln">3</span><span class="cl"><span class="se"></span>  -e <span class="nv">RAILS_ENCRYPTED_CREDENTIALS</span><span class="o">=</span><span class="s2">&#34;[encrypted]&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="ln">4</span><span class="cl"><span class="se"></span>  <span class="o">[</span>image_name<span class="o">]</span>
</span></span></code></pre></div><p>我的最佳实践并不代表是最完美的解决方案，最起码能够让用户避免碰触代码也能够很轻松的部署才是前提，不是吗？</p>
]]></content:encoded></item><item><title>Rails 构建镜像安全处理加密凭证</title><link>https://icyleaf.com/2022/09/rails-build-docker-image-handle-encrypted-credentials-securely/</link><pubDate>Thu, 15 Sep 2022 13:58:31 +0800</pubDate><guid>https://icyleaf.com/2022/09/rails-build-docker-image-handle-encrypted-credentials-securely/</guid><description>Docker 构建镜像该如何正确处理 master key 和 credentials.yml.enc</description><content:encoded><![CDATA[<p>最近在做一个小的 Side Project 作为公共服务首要是需要保证用户数据的绝对安全，这就需要对数据库数据做加密处理。</p>
<p>Rails <a href="https://qiita.com/NaokiIshimura/items/2a179f2ab910992c4d39">5.2</a> 开始支持 <code>credentials.yml.enc</code> 加密凭证，
<a href="https://blog.saeloun.com/2019/10/10/rails-6-adds-support-for-multi-environment-credentials.html">6.0</a> 支持多环境的 credentials 加密凭证，
<a href="https://blog.saeloun.com/2021/06/09/rails-7-add-encryption-to-active-record.html">7.0</a> 支持对 model 数据库表字段加密处理，但我从 5.1 支持 <code>secrets.yml</code> 开始就没使用过。
最近一周开发加摸索下来，总结一句话：<strong>一直加密一直爽，容器化奔赴火葬场。</strong></p>
<h2 id="机制原理">机制原理</h2>
<p>初始化一个 Rails 5.2+ 项目会在项目根目录 <code>config</code> 生成 <code>master.key</code> 和 <code>credentials.yml.enc</code> 两个文件，前者可以理解为核心密钥，后者是用核心密钥通过
<a href="https://github.com/rails/rails/blob/7-0-stable/activesupport/lib/active_support/encrypted_configuration.rb">ActiveSupport::EncryptedConfiguration</a> 加密类生成的加密后的数据文件。</p>
<p>只需要保证 <code>master.key</code> 不会泄露，通过 <code>rails credentials:edit</code> 配置服务所需的各自私密 token、secret key 之类也可以安全的提交到 Git 仓库中。</p>
<h3 id="存储路径">存储路径</h3>
<p>密钥和加密后的文件会存在如下目录：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="c1"># 缺省</span>
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">config/master.key
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">config/credentials.yml.enc
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">
</span></span><span class="line"><span class="ln"> 5</span><span class="cl"><span class="c1"># Rails 生产环境决定 (6.0 开始支持)</span>
</span></span><span class="line"><span class="ln"> 6</span><span class="cl"><span class="c1"># 如下分别对应 development 和 production 环境</span>
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">config/credentials/development.key
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">config/credentials/development.yml.enc
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">
</span></span><span class="line"><span class="ln">10</span><span class="cl">config/credentials/production.key
</span></span><span class="line"><span class="ln">11</span><span class="cl">config/credentials/production.yml.enc
</span></span></code></pre></div><h3 id="触发机制">触发机制</h3>
<p>只要运行的代码会涉及 <code>config/environment.rb</code> 文件解密流程就会自动被触发，比如：</p>
<ul>
<li><code>rails server</code></li>
<li><code>rails console</code></li>
<li><code>Rakefile</code> 附加 <code>:environment</code> 参数的所有 tasks</li>
</ul>
<h3 id="常见加解密报错">常见加解密报错</h3>
<p>解密机制被触发的那一刻，它会从存储路径从缺省到当前生产环境去寻找对应的文件，master key 会优先读取 <code>RAILS_MASTER_KEY</code> 环境变量的值，没有才会去存储文件读取，都没有找到就报错 <code>MissingKeyError</code> 错误。</p>
<p>master key 在 Rails 5.2 ~ 7 版本密钥的长度必须符合 aes-128-gcm 也就是 32 字节，设置错误会得到 <code>InvalidKeyLengthError</code> 错误。</p>
<p><code>*.enc</code> 文件不存在会触发 <code>MissingContentError</code> 错误。</p>
<p>其他的错误还有可能是：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl"><span class="c1"># 通常是 credentials.yml.enc 文件缺失或未设置 secret_key_base (SECRET_KEY_BASE) 的值</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl">ArgumentError: Missing <span class="sb">`</span>secret_key_base<span class="sb">`</span> <span class="k">for</span> <span class="s1">&#39;production&#39;</span> environment, <span class="nb">set</span> this string with <span class="sb">`</span>bin/rails credentials:edit<span class="sb">`</span>
</span></span><span class="line"><span class="ln">3</span><span class="cl">
</span></span><span class="line"><span class="ln">4</span><span class="cl"><span class="c1"># master key 密钥不正确无法解密</span>
</span></span><span class="line"><span class="ln">5</span><span class="cl">Unable to load application: ActiveSupport::MessageEncryptor::InvalidMessage: ActiveSupport::MessageEncryptor::InvalidMessage
</span></span><span class="line"><span class="ln">6</span><span class="cl">
</span></span><span class="line"><span class="ln">7</span><span class="cl"><span class="c1"># 错误同上</span>
</span></span><span class="line"><span class="ln">8</span><span class="cl">OpenSSL::Cipher::CipherError
</span></span></code></pre></div><p>成就大体都列出来了，至于你能到哪步就看你的造化了（开玩笑）。</p>
<h2 id="数据库字段加密">数据库字段加密</h2>
<p>Rails 默认并不会对数据库字段加密，在 7.0 开始允许开发者定义加密字段也允许自定义加解密方法。这个不是本文的讨论范围不再展开。</p>
<p>初始化需要通过如下命令生成一个随机的 Keys：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">$ rails db:encryption:init
</span></span><span class="line"><span class="ln">2</span><span class="cl">Add this entry to the credentials of the target environment:
</span></span><span class="line"><span class="ln">3</span><span class="cl">
</span></span><span class="line"><span class="ln">4</span><span class="cl">active_record_encryption:
</span></span><span class="line"><span class="ln">5</span><span class="cl">  primary_key: KMw07GoiPScVwtmoNxlBv7YibFCnB4dU
</span></span><span class="line"><span class="ln">6</span><span class="cl">  deterministic_key: CTttlez04KZcy3MCMFtZ8FUEopSAmJOr
</span></span><span class="line"><span class="ln">7</span><span class="cl">  key_derivation_salt: FwUgrDWHX3wN7kKw5gYSsYEgzxRnYBWh
</span></span></code></pre></div><p>在通过 <code>rails credentials:edit</code> 把上端加密串加到 credentials 里面保存即可，<strong>不同的加密串是无法解密已经存在数据库中的数据的，切记！切记！切记！</strong>
否则你会再获得一个成就 <code>ActiveRecord::Encryption::Errors::Decryption</code> 报错。</p>
<h2 id="镜像构建处理">镜像构建处理</h2>
<blockquote>
<p>恭喜你，从现在开始你本应当直面恐惧，可惜你发现了我这篇文章缺少了点悲惨的经历。</p>
</blockquote>
<p>制作 Docker 镜像无论什么情况都要保证不会包含任何私密数据，Rails 绕不开的点主要是 <code>rails assets:complie</code>。
上面我也说了只要涉及 <code>:environment</code> 参数的所有 tasks 都会走解密流程，它也不例外。</p>
<p>构建方面我通过三种方式来解析如果从不安全到安全的构建过程：</p>
<h3 id="-最不安全的方式">🚫 最不安全的方式</h3>
<p>镜像构建允许设置 <a href="https://docs.docker.com/engine/reference/commandline/build/#set-build-time-variables---build-arg">build-arg</a> 传递：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-dockerfile" data-lang="dockerfile"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="k">FROM</span><span class="s"> ruby:3.0.3</span><span class="err">
</span></span></span><span class="line"><span class="ln"> 2</span><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="ln"> 3</span><span class="cl"><span class="err"></span><span class="k">ARG</span> master_key<span class="err">
</span></span></span><span class="line"><span class="ln"> 4</span><span class="cl"><span class="err"></span><span class="k">ENV</span> <span class="nv">RAILS_MASTER_KEY</span><span class="o">=</span><span class="nv">$master_key</span><span class="err">
</span></span></span><span class="line"><span class="ln"> 5</span><span class="cl"><span class="err"></span><span class="k">ENV</span> <span class="nv">RAILS_ENV</span><span class="o">=</span>production
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">
</span></span><span class="line"><span class="ln"> 7</span><span class="cl"><span class="c"># 省略</span><span class="err">
</span></span></span><span class="line"><span class="ln"> 8</span><span class="cl"><span class="err"></span>...<span class="err">
</span></span></span><span class="line"><span class="ln"> 9</span><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="ln">10</span><span class="cl"><span class="err"></span><span class="k">RUN</span> bin/rails assets:complie<span class="err">
</span></span></span><span class="line"><span class="ln">11</span><span class="cl"><span class="err"></span><span class="c"># 或者</span><span class="err">
</span></span></span><span class="line"><span class="ln">12</span><span class="cl"><span class="err"></span><span class="k">RUN</span> <span class="nv">RAILS_MASTER_KEY</span><span class="o">=</span><span class="nv">$master_key</span> bin/rails assets:complie<span class="err">
</span></span></span></code></pre></div><p>执行构建命令 <code>docker build -t app --build-arg master_key=[32bits-length-key] .</code> 构建后虽然可以获得镜像，但构建时设置的值也被封装在了容器中，就算没有封装到容器中使用 <code>docker history</code> 也可以看到，因此这种方式是绝对不可取的。</p>
<h3 id="-改进版">⭕️ 改进版</h3>
<p>你可能会看到有些镜像的 Dockerfile 里面会包含多个 <code>FROM</code> 的<a href="https://docs.docker.com/develop/develop-images/multistage-build/">多阶段构建</a>。这个是为了利用隔离资源，重复利用缓存机制的方式使得最终的容器极可能的小和安全。我们可以利用它把私密数据隔离在前面的临时镜像中。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-dockerfile" data-lang="dockerfile"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="k">FROM</span><span class="s"> ruby:3.0.3 as builder</span><span class="err">
</span></span></span><span class="line"><span class="ln"> 2</span><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="ln"> 3</span><span class="cl"><span class="err"></span><span class="k">ARG</span> <span class="nv">workspace</span><span class="o">=</span>/app<span class="err">
</span></span></span><span class="line"><span class="ln"> 4</span><span class="cl"><span class="err"></span><span class="k">ARG</span> master_key<span class="err">
</span></span></span><span class="line"><span class="ln"> 5</span><span class="cl"><span class="err"></span><span class="k">ENV</span> <span class="nv">RAILS_MASTER_KEY</span><span class="o">=</span><span class="nv">$master_key</span><span class="err">
</span></span></span><span class="line"><span class="ln"> 6</span><span class="cl"><span class="err"></span><span class="k">ENV</span> <span class="nv">RAILS_ENV</span><span class="o">=</span>production
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">
</span></span><span class="line"><span class="ln"> 8</span><span class="cl"><span class="c"># 省略</span><span class="err">
</span></span></span><span class="line"><span class="ln"> 9</span><span class="cl"><span class="err"></span>...<span class="err">
</span></span></span><span class="line"><span class="ln">10</span><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="ln">11</span><span class="cl"><span class="err"></span><span class="k">WORKDIR</span><span class="s"> $workspace</span><span class="err">
</span></span></span><span class="line"><span class="ln">12</span><span class="cl"><span class="err"></span><span class="k">RUN</span> bin/rails assets:complie<span class="err">
</span></span></span><span class="line"><span class="ln">13</span><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="ln">14</span><span class="cl"><span class="err"></span><span class="c"># 省略</span><span class="err">
</span></span></span><span class="line"><span class="ln">15</span><span class="cl"><span class="err"></span>...<span class="err">
</span></span></span><span class="line"><span class="ln">16</span><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="ln">17</span><span class="cl"><span class="err"></span><span class="k">FROM</span><span class="s"> ruby:3.0.3-slim</span><span class="err">
</span></span></span><span class="line"><span class="ln">18</span><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="ln">19</span><span class="cl"><span class="err"></span><span class="c"># 省略</span><span class="err">
</span></span></span><span class="line"><span class="ln">20</span><span class="cl"><span class="err"></span>...<span class="err">
</span></span></span><span class="line"><span class="ln">21</span><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="ln">22</span><span class="cl"><span class="err"></span><span class="k">COPY</span> --from<span class="o">=</span>builder <span class="nv">$workspace</span> <span class="nv">$workspace</span><span class="err">
</span></span></span></code></pre></div><p>镜像存在 <code>builder</code> 和一个缺省名字（通常是 <code>stage-N</code>, N 是数字从 1 开始）两个阶段，第一阶段是最不安全方式的实现方式，这里在最后一个阶段通过一个干净安全的镜像把上一个阶段的结果文件复制过来就达成了第一个阶段中私密数据泄露的问题。</p>
<p>这种方式也是当前大多数人会应用的方式，尤其利用 Github Action 的 <a href="https://docs.github.com/en/actions/security-guides/encrypted-secrets">Encrypted secrets</a> 功能从某种程度上杜绝了隐私数据的泄露。</p>
<h3 id="-加强版">✅ 加强版</h3>
<p><a href="https://docs.docker.com/develop/develop-images/build_enhancements/">Buildkit</a> 是 Docker 新一代镜像构建工具，启用可以通过配置环境变量 <code>DOCKER_BUILDKIT=1</code> 或在 Docker 配置文件的 features 字典增加 <code>&quot;buildkit&quot; : &quot;true&quot;</code>。</p>
<p>由于采用新的构建工具，额外还需要在 Dockerfile 头部显性声明新的语法：<code>syntax = docker/dockerfile:1.2</code> 配合
<a href="https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information">新的构建 secret </a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-dockerfile" data-lang="dockerfile"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="c"># syntax = docker/dockerfile:1.2</span><span class="err">
</span></span></span><span class="line"><span class="ln"> 2</span><span class="cl"><span class="err"></span><span class="k">FROM</span><span class="s"> ruby:3.0.3</span><span class="err">
</span></span></span><span class="line"><span class="ln"> 3</span><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="ln"> 4</span><span class="cl"><span class="err"></span><span class="k">ARG</span> <span class="nv">workspace</span><span class="o">=</span>/app<span class="err">
</span></span></span><span class="line"><span class="ln"> 5</span><span class="cl"><span class="err"></span><span class="k">WORKDIR</span><span class="s"> $workspace</span><span class="err">
</span></span></span><span class="line"><span class="ln"> 6</span><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="ln"> 7</span><span class="cl"><span class="err"></span><span class="c"># 省略</span><span class="err">
</span></span></span><span class="line"><span class="ln"> 8</span><span class="cl"><span class="err"></span>...<span class="err">
</span></span></span><span class="line"><span class="ln"> 9</span><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="ln">10</span><span class="cl"><span class="err"></span><span class="k">RUN</span> --mount<span class="o">=</span><span class="nv">type</span><span class="o">=</span>secret,id<span class="o">=</span>master_key,target<span class="o">=</span>config/master.key,required<span class="o">=</span><span class="nb">true</span> <span class="se">\
</span></span></span><span class="line"><span class="ln">11</span><span class="cl"><span class="se"></span>    bin/rails assets:precompile<span class="err">
</span></span></span></code></pre></div><p>构建命令执行需要通过 <a href="https://docs.docker.com/build/buildx/install/">buildx</a> CLI 子命令来完成：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">$ docker buildx build <span class="se">\
</span></span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="se"></span>  --secret <span class="nv">id</span><span class="o">=</span>master_key,src<span class="o">=</span>config/master.key <span class="se">\
</span></span></span><span class="line"><span class="ln">3</span><span class="cl"><span class="se"></span>  -t app .
</span></span></code></pre></div><p>结合 <a href="https://github.com/moby/buildkit/blob/master/frontend/dockerfile/docs/reference.md#run---mounttypesecret">&ndash;mount-type=secret</a> 支持的参数:</p>
<table>
<thead>
<tr>
<th>参数名</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>密钥的唯一 id，默认是 target 参数的值的文件名</td>
</tr>
<tr>
<td>target</td>
<td>镜像内挂载的路径，默认是 <code>/run/secrets/</code> + <code>id</code></td>
</tr>
<tr>
<td>required</td>
<td>设置 <code>true</code> 当密钥不存在时报错，默认是 <code>false</code></td>
</tr>
<tr>
<td>mode</td>
<td>挂载后的文件权限，默认是 <code>0400</code></td>
</tr>
<tr>
<td>uid</td>
<td>设置密钥文件的用户 ID，默认是 <code>0</code></td>
</tr>
<tr>
<td>gid</td>
<td>设置密钥文件的用户组 ID，默认是 <code>0</code></td>
</tr>
</tbody>
</table>
<p><code>id</code> 关联 CLI 传参和构建镜像中执行步骤，CLI 入参设置 secret 的输入文件，构建镜像则需要把 secret 导出到镜像中具体的路径，其实就是这么简单。极少数支持 Docker
部署的云服务，比如 <a href="https://render.com/docs/docker-secrets">Render</a> 支持这种方式。部署到云服务上还需要重新考量下。</p>
<h2 id="本篇小结">本篇小结</h2>
<p>折腾一圈终于获得了一个干净、安全的镜像，等到部署时又傻眼了。面向技术人员或公司的项目倒还好，初始化时通过命令一通操作配置完也不需要处理 master key 不匹配的情况。
无论使用上面改进版还是加强版都能过顺利跑起来。如果 Docker 镜像是要面向客户的话，怎么让他们初始化一个属于他们自己的 master key 和加密数据呢？开始挠头了吧。</p>
<p><del>未完待续&hellip;</del> <a href="https://icyleaf.com/2022/09/perfect-solution-to-steup-rails-encrypted-credentials/">翻看答案</a>。</p>
<h2 id="参考资源">参考资源</h2>
<ul>
<li><a href="https://techblog.lclco.com/entry/2021/07/27/110000">Railsのcredentials.yml.encとmaster keyをDockerで安全に扱う</a></li>
<li><a href="https://pythonspeed.com/articles/docker-build-secrets/">Don’t leak your Docker image’s build secrets</a></li>
</ul>
]]></content:encoded></item><item><title>ActiveRecord 使用秘笈</title><link>https://icyleaf.com/2013/12/activerecord-tips/</link><pubDate>Tue, 03 Dec 2013 12:34:56 +0800</pubDate><guid>https://icyleaf.com/2013/12/activerecord-tips/</guid><description>作为 Rails 生态之一的 ORM 一定要好好学习</description><content:encoded><![CDATA[<p>ActiveRecord 是 Rails 内置的 ORM 框架，大多数人学习 Ruby 都是从 rails 开始，接触的也是这个 ORM，因此就有了这个使用秘笈。</p>
<h1 id="支持-rake-dbxxx-命令">支持 <code>rake db:xxx</code> 命令</h1>
<p>在非 rails 项目怎么让 rake 支持 db:xxx 命令呢？把如下代码放到 <code>Rakefile</code> 中:</p>
<pre tabindex="0"><code>namespace :db do
  require &#39;activerecord&#39;
  require &#39;yaml&#39;

  desc &#34;加载项目表数据到数据库&#34;
  task :init =&gt; :dbenv do
    file = &#34;db/schema.rb&#34;
    load(file) # 参考 rails 文件结构
  end

  desc &#34;创建数据库初始化数据&#34;
  task :seed =&gt; :dbenv do
    seed_file = File.join(File.dirname(__FILE__), &#39;db&#39;, &#39;seeds.rb&#39;)
    load(seed_file) if File.exist?(seed_file)
  end

  desc &#34;合并 db/migrate 目录下的数据库文件&#34;
  task :migrate =&gt; :dbenv do
    ActiveRecord::Migration.verbose = ENV[&#34;VERBOSE&#34;] ? ENV[&#34;VERBOSE&#34;] == &#34;true&#34; : true
    ActiveRecord::Migrator.migrate(&#34;db/migrate/&#34;, ENV[&#34;VERSION&#34;] ? ENV[&#34;VERSION&#34;].to_i : nil)
    Rake::Task[&#34;db:schema:dump&#34;].invoke if ActiveRecord::Base.schema_format == :ruby
  end

  desc &#39;设定 STEP=n 回滚之前版本的数据库结构&#39;
  task :rollback =&gt; :dbenv do
    step = ENV[&#39;STEP&#39;] ? ENV[&#39;STEP&#39;].to_i : 1
    ActiveRecord::Migrator.rollback(&#39;db/migrate/&#39;, step)
    Rake::Task[&#34;db:schema:dump&#34;].invoke if ActiveRecord::Base.schema_format == :ruby
  end

  task :dbenv do
    dbname = ENV[&#39;db&#39;] || &#39;development&#39;
  	$dbconfig = YAML::load(&#39;db/database.yml&#39;)
    ActiveRecord::Base.establish_connection($dbconfig[dbname])
  end

  namespace :schema do
    desc &#34;把数据库结构写入 db/schema.rb 文件&#34;
    task :dump =&gt; :dbenv do
      require &#39;active_record/schema_dumper&#39;
      File.open(ENV[&#39;SCHEMA&#39;] || &#34;db/schema.rb&#34;, &#34;w&#34;) do |file|
        ActiveRecord::SchemaDumper.dump(ActiveRecord::Base.connection, file)
      end
    end
  end
end
</code></pre><p>初始化数据库结构</p>
<pre tabindex="0"><code>$ rake db:init
</code></pre><h1 id="支持-sql-server">支持 SQL Server</h1>
<p>只针对 *nix 系统：</p>
<ol>
<li>安装 freetds</li>
</ol>
<pre tabindex="0"><code>* Mac OS: `brew install freetds`
* CentOS: `yum install -y freetds`
</code></pre><ol start="2">
<li><code>gem install tiny_tds</code></li>
<li><code>gem install activerecord-sqlserver-adapter</code></li>
</ol>
<p>引用如下：</p>
<pre tabindex="0"><code>require &#39;tiny_tds&#39;
require &#39;activerecord-sqlserver-adapter&#39;
require &#39;active_record&#39;

ActiveRecord::Base.establish_connection({
  :adapter =&gt; &#39;sqlserver&#39;
 :host =&gt; &#39;10.10.10.10&#39;,
 :username =&gt; &#39;sa&#39;,
  :password =&gt; &#39;p@ssword&#39;,
  :database =&gt; &#39;development&#39;,
  :timeout =&gt; 10,
  :port =&gt; 1433,
})

class Users &lt; ActiveRecord::Base
	self.table_name = &#39;User&#39;
	default_scope { lock(&#39;WITH (NOLOCK)&#39;) }
end
</code></pre><h1 id="多数据库支持">多数据库支持</h1>
<p>创建 <code>config/database.yml</code> 文件:</p>
<pre tabindex="0"><code>development:
  adapter: mysql2
  host: localhost
  username: root
  password:
  database: development
  timeout: 10
  port: 3306
test:
  adapter: mysql2
  host: 10.10.10.10
  username: root
  password: p@ssword
  database: test
  timeout: 10
  port: 1433
production:
  adapter: mysql2
  host: 33.33.33.33
  username: root
  password: p@ssword
  database: production
</code></pre><p>创建 <code>lib/model.rb</code> 文件:</p>
<pre tabindex="0"><code>$dbconfig = YAML::load(File::open(&#39;config/database.yml&#39;))

class User &lt; ActiveRecord::Base
  establish_connection $dbconfig[&#39;development&#39;]
end

class Post &lt; ActiveRecord::Base
  establish_connection $dbconfig[&#39;test&#39;]
end

class Tag &lt; ActiveRecord::Base
  establish_connection $dbconfig[&#39;production&#39;]
end
</code></pre><h1 id="动态创建表名">动态创建表名</h1>
<p>假若有个需求需要按照每月分表（当然也可以安装业务分表什么的），我们可以通过下面方式调用：</p>
<pre tabindex="0"><code># 插入 post，如果表不存在则创建后插入
post = Post.date(&#39;201312&#39;).get_or_create_table.create(
  title:&#39;test&#39;,
  content:&#39;body&#39;
)

# Model 实现代码
class Post &lt; ActiveRecord::Base
  @date = Time.now.strftime(&#34;%Y%02m&#34;)

  def self.date(date)
  	@date = date
  end

  def self.get_or_create_table(params={})
    self.date(params[:date]) if params[:date]
    self.create_table(params) if !self.exists?
  end

  def self.create_table(params={})
    self.date(params[:date]) if params[:date]
    table_name = self.table_name
    ActiveRecord::Schema.define do
      create_table table_name do |table|
        table.column :title, :string
        table.column :content, :text
        table.column :created_at, :datetime
        table.column :updated_at, :datetime
      end
    end

    return self
  end

  def self.table_exists?
    # 如果你设置了多数据库请取消下行注解并更改配置名（参考上个技巧）
    # ActiveRecord::Base.establish_connection($dbconfig[&#39;development&#39;])

    ActiveRecord::Base.connection.tables.include?(self.table_name)
  end

  def table_name
    &#34;#{@date_users}&#34;
  end
end
</code></pre>]]></content:encoded></item></channel></rss>