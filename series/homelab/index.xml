<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Homelab on icyleaf</title><link>https://icyleaf.com/series/homelab/</link><description>Recent content in Homelab on icyleaf</description><language>zh</language><lastBuildDate>Sat, 12 Feb 2022 20:00:00 +0800</lastBuildDate><atom:link href="https://icyleaf.com/series/homelab/index.xml" rel="self" type="application/rss+xml"/><item><title>如何搭建家用 homelab: 先导篇</title><link>https://icyleaf.com/2022/02/how-to-homelab-part-0-intro/</link><pubDate>Sat, 12 Feb 2022 20:00:00 +0800</pubDate><guid>https://icyleaf.com/2022/02/how-to-homelab-part-0-intro/</guid><description>搭建 homelab 之前都需要了解哪些背景</description><content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>这将会是一个持续系列的主题文章，你将会从最基础的家庭 homelab 搭建开始循序渐进到一些进阶的系统、网络、服务层面的学习。我尽可能以新人的角色描述简单易懂的语言，系列文章会涉及家庭网络、路由器、Linux、数据储存、NAS、服务化等等，如果你在过程中又遇到任何问题，欢迎给我留言。</p>













  
  <figure><img src="/tutorials/how-to-homelab/part-0/homelab-diagram-v2.0.png"
      alt="图片来源"/><figcaption><p class="source">图片来源<a href="https://twitter.com/icyleaf/status/1472036769742745603">@icyleaf@twitter.com</a>
    </p>

    <h4>2021 年底 v2.0 镇楼用的网络拓扑图</h4><div style="clear: both"></div>
  </figcaption></figure>

<h2 id="搭建-homelab-起因">搭建 homelab 起因</h2>
<blockquote>
<p>homelab: a laboratory of (usually slightly outdated) awesome in the domicile</p>
</blockquote>
<p>从语言直译来看可以说是家庭 homelab，把这个事情延展到网络及服务上面那就可以干很多有意思的事情，比如：</p>
<ul>
<li>NAS 存储：资源下载、存放任何的数据（照片、小姐姐、学习资料、代码等）</li>
<li>影视库：从最简单的网络共享文件夹到可以托管影视管理、播放、转码为一体的 Jellyfin、Plex 服务</li>
<li>网络管理：设备限流、流量审计、防火墙策略</li>
<li>应用开发：做一些 side projects 需要开发环境、缓存、数据存储等</li>
<li>DevOps：ansible、salt、k8s 来操作维护多个服务器、VM 或者是 lxc</li>
</ul>
<p>如果您恰好是一名软件应用开发者，homelab 是最佳的扩展你的技能的很好的实验田，学习网络拓扑、Linux 系统、安全管理等。
对于大部分人来说或许多多少少都会听说过 NAS 服务器，其实他也是 homelab 的实践应用之一。</p>
<p>不要被它的名字吓到，本质上它就是在一个操作系统上面跑一堆上面提到和没提到的服务而已。</p>
<h2 id="自建考虑的点">自建考虑的点</h2>
<p>无论上面提到的点有多么吸引你想要组件自己的家庭 homelab，您还要慎重考虑是否真的需要，毕竟真的整一套也会投入很大的精力和一些资金，千万不要没有需求创造需求。</p>
<blockquote>
<p>本系列的内容会优先考虑使用开源、免费的解决方案，如果真的无法满足会分享一些商业的解决方案。</p>
</blockquote>
<h2 id="商业成品方案">商业成品方案</h2>
<p>商业成品主要是售卖软件服务来提供类网络管理、数据存储等的解决方案，市面上主流的主要是：</p>
<ul>
<li><a href="https://www.synology.com/">群晖</a>: 搭配硬件售卖，各方面都非常令人满意的软件系统，对小白非常友好</li>
<li><a href="https://www.qnap.com/">威联通</a>: 搭配硬件售卖的软件，价格比群晖有优势，软件系统相对群晖要逊色不少</li>
<li><a href="https://unraid.net/">UnRaid</a>: 一款商业的 NAS 系统，但提供快速扩容、Docker 和 VM 管理</li>
<li><a href="https://store.ui.com/collections/unifi-network-unifi-os-consoles">UniFi OS</a>: 主要是 Dream Machine 搭载的系统，整体下来价格非常昂贵</li>
</ul>
<p>通常情况下商业成品是一站式的解决方案，采购的话费用也会比自建要投入更多的资金，这个就不再 homelab 的考虑范围，这里就一笔带过。</p>
<h2 id="开源免费方案">开源&amp;免费方案</h2>
<p>自建 homelab 必然会从硬件、软件下手，准备好了再决定网络拓扑结构。</p>
<h2 id="硬件筛选">硬件筛选</h2>
<p>国内和国外的硬件环境有非常大的不同，国内有很多的洋垃圾、魔改硬件的讨论，比如您可能听说过的 E3/E5 神教、垃圾佬之类的名词。
若你是这个领域的行家恭喜你会省不少钱；若你不是也不用沮丧踏踏实实的花钱买数据安全，切记也不要盲目入手垃圾佬的硬件，捡垃圾有风险，有些硬件会被超的很高这样的性价比也会很低而不值得入手。</p>
<p>最关键的几个部分：CPU、内存、主板、网络和硬盘。</p>
<ul>
<li>CPU 和内存很好理解，CPU 核心数量、内存容量越多越能造，如果对于影视播放有要求就需要 CPU 有好的核心支持。</li>
<li>主板对网口数量、扩展槽会有依赖，网口数量和硬盘数量支持不多就要靠扩展槽来凑。</li>
<li>网络状况至关重要，WiFi 6 传输速度还是不如千兆有线，评估下自己家里猫和路由器最低要求千兆网络，有线也尽量是 CAT5e/CAT6 规格</li>
<li>NAS 应用场景对硬盘容量和规格要求比较高，SSD 不是强需求，如果不差钱全上 SSD 也不是不行。</li>
</ul>
<p>这里每一个展开聊都是非常大的话题，我可能会整理一些外部资源供您去补充这方面的知识。市面上也有一些成品硬件的解决方案，您也可以考虑：</p>
<ul>
<li>英特尔 NUC：小巧的机型并不代表他的性能很弱，最新 12 代的 NUC 从各方面都是很好的选择</li>
<li>联想 ThinkCentre 系列：比 NUC 稍微大点，这个系列体系非常的庞大且悠久，也有不少价格合适的二手和改装件，但会折腾一些</li>
<li>惠普 MicroServer Gen 系列：Gen8/Gen10 都是目前主流的 homelab 解决方案，正统服务器规格和特性。（我有一台 Gen 8 正在服役）</li>
<li>各种开发板：比如树莓派从 3B 开始它也能做一些 homelab 的应用场景，国内外资料丰富，配件众多。唯一的缺点受新冠影响它的价格在国内居高不下，可以考虑一些其他成熟的开发板。</li>
<li>各种矿渣主机：区块链盛行的挖矿行业充斥着很多挖矿主机，比如星际蜗牛、绿盘、蜜獾超存等，有些硬件参数还不错到手之后需要调节或改下静音风扇就可用。</li>
</ul>
<p>最简单的版本就是可以找一个可以长期运行的不再使用的笔记本电脑、台式电脑就能起步（功耗太高的话就真的算了）</p>
<h2 id="软件部署方案">软件部署方案</h2>
<p>硬件准备完备之后，我们来考虑搭配哪种软件部署方案，通常会被划分为三大类：</p>
<ul>
<li>传统部署（Traditional Deployment）</li>
<li>虚拟化部署（Virutalization Deployment）</li>
<li>容器化部署（Containerd Deployment）</li>
</ul>












<figure><a href="/tutorials/how-to-homelab/part-0/container-evolution.svg" class="gallery-item" target="_blank" data-pswp-width="1800" data-pswp-height="650"><img src="/tutorials/how-to-homelab/part-0/container-evolution.svg"
      alt="图片来源"/></a><figcaption><p class="source">图片来源<a href="https://kubernetes.io/zh/docs/concepts/overview/what-is-kubernetes/">Kubernetes 是什么？</a>
    </p>

    <h4>部署方式的演变</h4><div style="clear: both"></div>
  </figcaption></figure>

<p>通常在硬件性能还算不错情况下都不会采用传统部署的方案，单主机的优先级：容器化 &gt; 虚拟化 &gt; 传统部署，机器性能不错且有技术兴趣度的优先级：虚拟化 &gt; 容器化 &gt; 传统部署。</p>
<h3 id="传统部署">传统部署</h3>
<p>传统部署通常是在 Bare-metal 机器上面进行的，因此我把它俩划为等号，它使用硬件主机安装操作系统如 Window、macOS 和 *nix (Unix/Linux) 后直接安装和部署服务，听起来没什么特别的，
市面上也会有很多的运维工具用于解决安装系统、配置环境、后期维护、数据备份的工作，比如 Salt、Ansible、Puppet 等有一定的学习成本，没法做到开箱即用， 100% 发挥硬件机能也会是一个问题。</p>













  
  <figure><img src="/tutorials/how-to-homelab/part-0/bare-metal.jpg"
      alt="图片来源"/><figcaption><p class="source">图片来源<a href="https://thecloudgirl.dev/BareMetal.html">The Cloud Girl</a>
    </p>

    <h4>Bare metal 方案</h4><div style="clear: both"></div>
  </figcaption></figure>

<h3 id="虚拟化部署">虚拟化部署</h3>
<ul>
<li><a href="https://www.vmware.com/products/esxi-and-esx.html">ESXi</a>: VMware 公司开发的硬件虚拟化解决方案，界面简单易用，自身功能较强，付费使用</li>
<li><a href="https://www.proxmox.com">Proxomx</a>: 基于 Debian 开发企业级虚拟化系统，支持硬件直通，可扩展集群，上手难度略高，简称 PVE</li>
</ul>
<p>基于开源解决方案实在没有太多可选性，PVE 是市面上最成熟、社区活跃也很高的方案，
就算遇到奇奇怪怪的问题善用搜索引擎代替上都可以解决。</p>
<h3 id="容器化部署">容器化部署</h3>
<ul>
<li><a href="https://www.docker.com/">Docker</a>: 现代容器化的开山鼻祖，自己比较作引发了大叛逃就有了下面两个解决方案</li>
<li><a href="https://containerd.io/">Containerd</a>: 始于 Docker 母公司，壮大在 CNCF 基金会，提供 nerdctl 代替 docker CLI</li>
<li><a href="https://podman.io/">Podman</a>: Red Hat 公司领导的兼容 Docker 的解决方案</li>
</ul>
<p>一句话总结没看懂就用 docker 就行。</p>
<h2 id="基础系统">基础系统</h2>
<p>如果选择传统部署随便用一个你熟悉且满足你需求的操作系统即可</p>
<h2 id="应用服务">应用服务</h2>
<p>定好软硬件的基础后您需要面对非常庞大的应用服务来扩展和丰富 homelab</p>
<h3 id="初阶方案">初阶方案</h3>
<h4 id="软路由">软路由</h4>
<ul>
<li><a href="https://github.com/openwrt/openwrt">openwrt</a>: 国内最近今年非常主流的解决方案，国内有个 <a href="https://github.com/immortalwrt/immortalwrt">immortalwrt</a> 分支版本</li>
<li><a href="https://www.asuswrt-merlin.net/">梅林</a>: 华硕开源的路由器固件，同样国内有个 <a href="https://www.koolcenter.com/">koolcenter</a> 改版</li>
<li><a href="https://dd-wrt.com/">dd-wrt</a>: 在流行刷路由器初期的懵懂的固件，受限于硬件支持度和更新频率渐行渐远，当时支持多 wan 的 tomato</li>
</ul>
<h4 id="网关">网关</h4>
<ul>
<li><a href="https://www.nginx.com/">nginx</a>: 老牌传统网关，用于托管或反向代理网站服务</li>
<li><a href="https://caddyserver.com/">caddy v2</a>: 现代化设计的 HTTP/2 且支持 <a href="https://letsencrypt.org/">Let’s encrypt</a> 的网关</li>
</ul>
<h4 id="dns">DNS</h4>
<ul>
<li><a href="https://dnsmasq.org/">dnsmasq</a>: 一切的基础，用于配置 DNS 和 DHCP 服务</li>
<li><a href="https://pi-hole.net/">pi-hole</a>: 主打保护隐私和过滤广告的路由系统，常用海外用户</li>
<li><a href="https://adguard.com/zh_cn/adguard-home/overview.html">adguard home</a>: 专注保护隐私和过滤广告全网广告拦截的服务，提供用户友善的 UI 界面</li>
<li><a href="https://github.com/pymumu/smartdns">smartDNS</a>: 加速 DNS 解析分流的 DNS 服务</li>
<li><a href="https://github.com/IrineSistiana/mosdns">mosdns</a>: 集 smartDNS 和 adguard home 优点并存的 DNS 服务但配置麻烦</li>
</ul>
<h4 id="防火墙">防火墙</h4>
<ul>
<li><a href="https://www.netfilter.org/projects/iptables/index.html">iptables</a>: Linux 常见的内置防火墙</li>
<li><a href="https://www.netfilter.org/projects/nftables/index.html">nftables</a>: iptables 的官方增强版，未来的趋势都会慢慢迁移过来</li>
<li><a href="https://www.pfsense.org/">pfSense</a>: 国外普遍使用的一款开源防火墙</li>
</ul>
<h4 id="nas">NAS</h4>
<ul>
<li><a href="">OpenMediaValut</a>: 硬件依赖低门槛的综合性 NAS 系统</li>
</ul>
<h4 id="服务部署">服务部署</h4>
<ul>
<li><a href="https://www.portainer.io/">portainer</a>: 简单容易上手的容器化部署解决方案</li>
</ul>
<h4 id="影音">影音</h4>
<ul>
<li><a href="https://jellyfin.org/">Jellyfin</a>: 影视剧、电影等媒体播放服务，支持片源资料搜刮和看过数据同步服务</li>
</ul>
<h4 id="应用">应用</h4>
<ul>
<li><a href="https://bitwarden.com/">Bitwarden</a>: 开源且完全可代替 1 Password 的全平台密码生成管理服务，推荐使用开发者用 Rust 重写的 <a href="https://github.com/dani-garcia/vaultwarden">vaultwarden</a></li>
<li><a href="https://zoneminder.com/">ZoneMinder</a>: 开源多路摄像头&amp;录像管理服务</li>
</ul>
<p>更多的应用可以关注我的<a href="https://github.com/stars/icyleaf/lists/self-host-services">自建服务集合</a></p>
<h3 id="高级进阶">高级进阶</h3>
<p>下面介绍的也仅限于我个人能力范围内目前想到的点，能力有限也请手下留情。</p>
<h4 id="网关-1">网关</h4>
<ul>
<li><a href="https://traefik.io/traefik/">traefik</a>: 一款开源的反向代理与负载均衡综合性工具</li>
</ul>
<h4 id="nas-1">NAS</h4>
<ul>
<li><a href="https://www.truenas.com/">TrueNAS</a>: 国外做数据存储的首选，基于 ZFS 文件系统内存大小决定磁盘容量的上限，前身叫 FreeNAS</li>
</ul>
<h4 id="服务部署-1">服务部署</h4>
<ul>
<li><a href="https://kubernetes.io/">Kubernetes</a>: 现代容器化编排系统，所谓的云 YAML 工程师终极工具 😆</li>
</ul>
<h2 id="小结">小结</h2>
<p>homelab 玩法的可能性是无限的，不要把想象力局限在这几年国内流行的所谓 AIO Boom：
使用 pve 部署一切，更甚者用 openwrt + docker 部署各自服务出现问题先不说，
真遇到服务器宕机一波全带走。</p>
<p>另外不要太过于计较服务器的功耗情况，只要不是电耗子 35W 还是 65W 没省多少电费，
下面是一个正面例子，虽然用的是 X99-T8D + E5 2696V3*2 + 金河田 6100 双路电源
但开发者主要用于适合自己场景的使用，那就不是浪费。</p>
<blockquote class="twitter-tweet"><p lang="zh" dir="ltr">太牛逼了！今天把 <a href="https://twitter.com/wey_gu?ref_src=twsrc%5Etfw">@wey_gu</a> 哥哥送给我的 NUMA Server 弄好了，这是我人生中第一次拥有 NUMA，看到配置的时候直接惊住了，大半夜微信骚扰 Wey 哥哥表达自己的震惊和感谢，心想我何德何能可以拥有这么豪华的配置！在上面起了几个 VM 组了个 k8s 集群，终于不用紧张兮兮地在我的 MBP 上起 k8s 了！开心！ <a href="https://t.co/B9uwSiQXxK">pic.twitter.com/B9uwSiQXxK</a></p>&mdash; yetone (@yetone) <a href="https://twitter.com/yetone/status/1540235004495921152?ref_src=twsrc%5Etfw">June 24, 2022</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>下面这个图中的例子是一个反面教材，要么哗众取宠要么非蠢即坏。</p>
<blockquote class="twitter-tweet"><p lang="zh" dir="ltr">待机 100W 的低性能 NAS，这是图什么😂 <a href="https://t.co/WgphSsjobb">pic.twitter.com/WgphSsjobb</a></p>&mdash; taresky (@taresky) <a href="https://twitter.com/taresky/status/1555752846334705666?ref_src=twsrc%5Etfw">August 6, 2022</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>最后的忠告，国内各自信息咨询站的 OpenWrt，NAS 文章看看就行，别太认真。
有那时间不如多看看官方文档，官方社区讨论 :D</p>
]]></content:encoded></item></channel></rss>