<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Homelab on icyleaf</title><link>https://icyleaf.com/series/homelab/</link><description>Recent content in Homelab on icyleaf</description><language>zh</language><lastBuildDate>Tue, 31 Jan 2023 19:28:50 +0800</lastBuildDate><atom:link href="https://icyleaf.com/series/homelab/index.xml" rel="self" type="application/rss+xml"/><item><title>如何搭建家用 homelab: 硬件和架构</title><link>https://icyleaf.com/2023/01/how-to-homelab-part-1-hardware-and-architecture/</link><pubDate>Tue, 31 Jan 2023 19:28:50 +0800</pubDate><guid>https://icyleaf.com/2023/01/how-to-homelab-part-1-hardware-and-architecture/</guid><description>家庭设备架构和考虑因素是根据实际需求不断地演变、试错和总结</description><content:encoded><![CDATA[<p>前面<a href="https://icyleaf.com/2022/02/how-to-homelab-part-0/">先导篇</a>全面性介绍了搭建家用 homelab 软硬件的可能性，实际操作上每个人的室内环境，网络布线都不太一样，钞能力的不同也有会千万种解法。我无法给出一个 100% 的解决方案，但我给大家回顾自己设备架构演变的过程在每个阶段是什么需求，遇到什么问题以及如何应对的，在文章末尾也会给出一些搭建 homelab 中不容忽视的因素。</p>
<h2 id="我的设备架构">我的设备架构</h2>
<blockquote>
<p>首先声明个人设备架构并不代表这是最佳的方案，只是当前符合我要求的结果，随着需求和技术变化而迭代更新。我的梦想就是有间下图的<a href="https://blog.cavelab.dev/2021/02/new-home-office/">地下室</a>能够给我随意折腾就好了。</p>
</blockquote>













  
  
    
      <figure data-pswp="2066x1444" data-size="800x"><a href="/tutorials/how-to-homelab/part-1/memo-devices-changes.png" class="gallery-item" target="_blank" data-pswp-width="2066" data-pswp-height="1444"><img src="/tutorials/how-to-homelab/part-1/memo-devices-changes_hu3bba97879b6716d3588d1f721fb7294f_2449304_800x0_resize_box_3.png"
      alt="创意来源"/></a><figcaption><p class="source">创意来源<a href="https://twitter.com/featherye/status/1619863195145089025">@HCocoa@twitter</a>
    </p>

    <p>homelab 梦想预期</p></figcaption></figure>

<p>当时房子装修是一切从简<span class="spoiler">（没有钱）</span>
造成网络线路设计不太合理：</p>
<ul>
<li>电视墙，卧室和工作室虽预埋 6 类网线但都是单根</li>
<li>弱电箱<a href="https://twitter.com/icyleaf/status/1591070791646744576">太小</a>无法扩展，前期很多设备都堆积到电视后面</li>
<li>房子不大无法设置散热友好的独立机柜</li>
<li>房间有 WIFI 死角</li>
</ul>
<p>新增家庭成员后原工作室改成了儿童房，部分设备又做了迁移，只能基于现有的结构进行优化和改进，以下请目睹我的血泪史。</p>
<h3 id="设备架构演变">设备架构演变</h3>
<h4 id="2014--2016">2014 ~ 2016</h4>













  
  
    
      <figure data-pswp="1204x750" data-size="800x"><a href="/tutorials/how-to-homelab/part-1/homelab-diagram-v0.png" class="gallery-item" target="_blank" data-pswp-width="1204" data-pswp-height="750"><img src="/tutorials/how-to-homelab/part-1/homelab-diagram-v0_hubc530f3d7645fc4772a55310c300252b_67594_800x0_resize_box_3.png"/></a><figcaption>

    <p>v0 设备架构拓扑图</p></figcaption></figure>

<p>这个期间换了新工作上班通勤每天都较长回家也不太折腾网络，路由器是从租房时代沿用过来的网件 WGR614。电视图便宜买了当时乐视出的第一代智能电视满足打开听个响的需求结果不到半年时间系统卡成翔，以至于之后再也没考虑过 Android 系统电视，头两年为了省钱明知在北京应该用联通还是莽了北方电信，那网速真是垃圾啊。还捡了一些不太靠谱的垃圾件就不提了。</p>
<h4 id="2016--2018">2016 ~ 2018</h4>













  
  
    
      <figure data-pswp="2212x1038" data-size="800x"><a href="/tutorials/how-to-homelab/part-1/homelab-diagram-v0.1.png" class="gallery-item" target="_blank" data-pswp-width="2212" data-pswp-height="1038"><img src="/tutorials/how-to-homelab/part-1/homelab-diagram-v0.1_huf66b4d76496a1cf08ad9e6737ad64050_133744_800x0_resize_box_3.png"/></a><figcaption>

    <p>v0.1 设备架构拓扑图</p></figcaption></figure>

<p>托工作福利政策出国旅游频次逐渐变多，拍摄的照片越来越多需要存储，2016 年从<a href="https://post.smzdm.com/p/399864/">什么值得买</a>了解后德淘了一台 HP Microserver Gen8。这是一台拥有 4 盘位，双千兆网口还带 iLO 管理功能的服务器，我却给它只安装了黑群晖算是成为了最早的 NAS 服务器设备架构，5.x 版本的群晖还不支持 Docker 算是一台单纯的 NAS 服务用来存储照片、视频、替代 Dropbox 的 Drive 服务，从上图也能看到我当时完全不了解什么是链路聚合，要不然我肯定给黑群晖接入双网口了。</p>
<p>路由器升级到了网件 6300v2 并刷入了 KoolCenter 定制化的<a href="https://twitter.com/icyleaf/status/887209662012989440">梅林固件</a>方便畅游网络，内网穿透这个时候被迫在使用，黑群晖升级后没法完全洗白之前的<a href="https://quickconnect.to/">群晖 QuickConnect</a> 服务被废，从联通客服申请公网 IP 后在通过 DDNS 定时上报（脚本还是<a href="https://twitter.com/zhmocean">糖醋鼻子</a>提供的）。</p>
<p>电视更换成了索尼 4K 60 寸互联网电视，外接了一个晶晨 S912 外贸盒子安装了 Kodi 和 Youtube 成为家庭影音系统。</p>
<p>PS 4 应该是在某一年黑五美亚捆绑赠送了 GTA5 和最后生还者的版本。</p>
<h4 id="2018--2019">2018 ~ 2019</h4>













  
  
    
      <figure data-pswp="2284x1662" data-size="800x"><a href="/tutorials/how-to-homelab/part-1/homelab-diagram-v1.0.png" class="gallery-item" target="_blank" data-pswp-width="2284" data-pswp-height="1662"><img src="/tutorials/how-to-homelab/part-1/homelab-diagram-v1.0_hu16a6d641ca5084c17972231b4497bef7_264511_800x0_resize_box_3.png"/></a><figcaption>

    <p>v1 设备架构拓扑图</p></figcaption></figure>

<p>2018 年我在推上吐槽梅林固件刷机太难被 <a href="https://twitter.com/icyleaf/status/1100322141914853376">anbutu</a> 安利 openwrt 系统并赠送了一台 <a href="https://cn.v2ex.com/t/659602">N270 x86 32 位双网口工控机</a>让我了解了新领域：软路由。</p>
<p>黑群晖升级到了支持 Docker 的 6.x 版本，开始尝试跑一些基础服务，比如 <a href="https://aria2.github.io/">aria2</a>，<a href="https://www.home-assistant.io/">home assistant</a>，<a href="https://github.com/AdguardTeam/AdGuardHome">Adguard home</a> 等。不知道什么时候小区会莫名其妙突然停电几分钟后再恢复，有一次硬盘被群晖的检测爆出来好多坏道，吓得我立刻买了<a href="https://twitter.com/icyleaf/status/1096386681907798017">施耐德 APC BK650</a> 带通讯协议，接入群晖保证断电后安全关机。</p>
<p>2019 年初开始学习拍摄视频，采购了<a href="https://icyleaf.com/2019/01/itx-coffee-lake-hackintosh-build-for-4k-video-editing/">新的 Intel 主机</a>在时隔 <a href="https://twitter.com/icyleaf/status/11322513061580800">9 年</a>后后重新学习安装<a href="https://icyleaf.com/2019/03/asrock-z390-gaming-itx-install-hackintosh-tutorial/">黑苹果</a>来代替年迈的 Macbook Pro 2015 款，期间不升级后续版本主要是因为 Intel 太拉，Apple 把硬件全焊死升级顶配不值得。</p>
<h4 id="2020--2021">2020 ~ 2021</h4>













  
  
    
      <figure data-pswp="4644x3004" data-size="800x"><a href="/tutorials/how-to-homelab/part-0/homelab-diagram-v2.0.png" class="gallery-item" target="_blank" data-pswp-width="4644" data-pswp-height="3004"><img src="/tutorials/how-to-homelab/part-0/homelab-diagram-v2.0_hud6b13e642cdec1b76e4883675cc1f0da_933051_800x0_resize_box_3.png"
      alt="首发"/></a><figcaption><p class="source">首发<a href="https://twitter.com/icyleaf/status/1472036769742745603">@icyleaf@twitter</a>
    </p>

    <p>v2 设备架构拓扑图</p></figcaption></figure>

<p>2020 年末实际上才是我正式踏入 homelab 元年，之前只是满足存储需求的 NAS 服务。</p>
<p>软路由升级了至 <a href="https://twitter.com/icyleaf/status/1242070362839330817">E3845 四口工控机</a>（代号 <a href="https://starcraft.fandom.com/wiki/Larva_(StarCraft_II)">Larva</a>）它只承担最基础服务比如拨号，DNS 服务、屏蔽广告，DDNS 等。</p>
<p>交换机迷之自信选择网件 GS105 4 口非网管版，当时很多人问我为什么不选 8 口，我没有意识到后面的变化只是考虑弱电箱只能塞下 4 口。</p>
<p>应用服务由当时新爆出来的<a href="https://twitter.com/icyleaf/status/1339568737083527169">蜜獾超存</a>（代号 <a href="https://starcraft.fandom.com/wiki/Corruptor">Corruptor</a>）矿机<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>承担：6 盘位 / 双千兆网口 / J1900 CPU /8G 内存 / 64G MSATA，我主要是看中了它的机箱体积和设计，比蜗牛星际之类的好看太多。在它身上分别调研尝试下列系统：</p>
<ul>
<li>Debian: 直接跑 Docker 服务有点心不甘</li>
<li><a href="https://maxiee.github.io/post/mihuan1md/">OMV</a>: 最简单的 NAS 系统提供 Docker/Proxmox 内核，但任何操作都要 Apply 好久，实在没法接受</li>
<li><a href="https://www.proxmox.com">Proxmox</a>: 跑十几个不太吃性能系统及服务勉强可接受</li>
<li><a href="https://www.rancher.com/products/harvester">harvester</a>: Rancher 开源的基于 k8s 提供完全集成的存储和虚拟化功能的<a href="https://mp.weixin.qq.com/s?__biz=MzkyNzM4Nzk1NQ==&amp;mid=2247500683&amp;idx=1&amp;sn=2a30a79313c6b51b41a39c6618ccef1b">超融合基础架构软件</a>，万万没想到 <a href="https://twitter.com/icyleaf/status/1429100937499447296">J1900 带不动</a>&hellip;</li>
</ul>
<p>或许你会问为什么不利用好 Gen 8 服务器？原因是 G1610T 性能太弱带不起 ESXI 虚拟化，可升级 CPUs 比如 E3 1265L v2 之类的价格都虚高。我从一开始就把它当做纯粹的 NAS 服务器。四盘位上设置两两硬盘组成 RAID 1。一组 RAID 3T 作为照片存储，第二组 3T 是提供给蜜獾超存安装的服务提供数据存储服务，光驱位扩展一个 SSD 充当缓存盘就完事了。</p>
<p>经过一番折腾倔强的 J1900 扛不住压力，从咸鱼分别入了 17x17 豆希 ITX 主板，定制了 flex 电源，<a href="https://www.bilibili.com/read/cv9438621#reply149844420272">改了静音风扇</a>，配上 8700es CPU，PDD 入的单条 32G 内存和<a href="https://twitter.com/icyleaf/status/1416395829858869249">酷兽 256G M2 SSD</a>，复用蜜獾超存的机箱但它机身宽度较窄符合要求的只有利民 AXP90 x36，机箱后出风用都是酷冷的漩涡 80 静音风扇。</p>
<p>系统继续使用 Proxmox 设置备份还原工具<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>后用 VMs 跑 <a href="https://github.com/jellyfin/jellyfin">jellyfin</a>, <a href="https://github.com/portainer/portainer">portainer</a>, <a href="https://github.com/dani-garcia/vaultwarden">vaultwarden</a>, <a href="https://github.com/louislam/uptime-kuma">uptime kuma</a>, <a href="https://github.com/traefik/traefik">traefik</a> 等监控、数据库、应用服务，存储方面酷兽 SSD 作为系统盘，<a href="https://twitter.com/icyleaf/status/1228626720489537537">闲置的 4 块硬盘</a>组了 btrfs RAID 10，第五块做 3T 做电影、电视剧下载盘，最后一块是备用。</p>
<p>通过两次硬件升级淘汰的主机也都没有失去价值</p>
<ul>
<li>J1900 板 U 卖了也不值几个钱，干脆新套了<a href="https://twitter.com/icyleaf/status/1561341317778575363/">MAXT 小机箱</a>用于测试新的试验田捣腾其他稀奇古怪的系统、服务，并赋予新代号 <a href="https://en.wikipedia.org/wiki/Deadpool">Deadpool</a></li>
<li>N270 软路由在爆发疫情初期寄给了需要的武汉朋友</li>
</ul>
<h4 id="2022--2023">2022 ~ 2023</h4>
<blockquote>
<p>实际上是 2022 整年的版本，后续有变化会再更新。</p>
</blockquote>













  
  
    
      <figure data-pswp="4644x3342" data-size="800x"><a href="/tutorials/how-to-homelab/part-1/homelab-diagram-v2.1.png" class="gallery-item" target="_blank" data-pswp-width="4644" data-pswp-height="3342"><img src="/tutorials/how-to-homelab/part-1/homelab-diagram-v2.1_hu2e07676c2790f7a793b80a519fce3f89_1014582_800x0_resize_box_3.png"
      alt="首发"/></a><figcaption><p class="source">首发<a href="https://twitter.com/icyleaf/status/1619228928685801474">@icyleaf@twitter</a>
    </p>

    <p>v2.1 设备架构拓扑图</p></figcaption></figure>

<p>原计划是可以安心跑个 1 - 2 年不太可能会有什么大变化，只需要在基于 Proxmox 系统继续试验并搞定多 VMs 跑 k8s/k3s 集群后就能安心养老，两次事故打乱了我的规划。一次是升级至 64G 内存后<a href="https://twitter.com/icyleaf/status/1534419122427408385">挂了块硬盘</a>，幸好从 RAID 移除后还能<a href="https://twitter.com/icyleaf/status/1534543188333297665">正常工作</a>；第二次直接 All in one boom 原因是 <a href="https://twitter.com/icyleaf/status/1583461623179509761">CPU 散热风扇无法工作</a>。在采购风扇和优化机箱风道期间给了我反思的过程，我明明是排斥 All in one 设计的结果自己主力开发机也是这样的设计，服务越多则越要保证服务可用性，那就要新添至少 1 - 2 新主机但家里真的没有更多的地方，翻阅国内外的资料目标锁定了几个目标：</p>
<ul>
<li><a href="https://homelab.khuedoan.com/">NEC M700</a>: 6 代，魔改支持 7/8/9 代</li>
<li><a href="https://rpi4cluster.com/">树莓派 4B</a>: 有丰富的成功案例但价格简直一个离谱<sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup></li>
<li><a href="https://v2ex.com/t/878188">荣品 king3399</a>: RK3399 性能强但我没赶上车价格被炒上去且 2G 内存有点小</li>
</ul>
<p>某天在闲鱼刷推荐线看到一个比荣品 king3399 更好的 <a href="https://twitter.com/icyleaf/status/1586636664457551872">EAIDK 610</a> RK3399 开发板 4G 内存价格才 200 出头，尝试买了两个又在 <a href="https://twitter.com/icyleaf/status/1598302816938127360">anbutu</a> 和社区 <a href="https://gitee.com/e190/armbian/">eaidk-610 armbian-build 项目</a>的帮助下成功编译并烧录了 armbian 系统，跑通 k3s 服务后又入了两个和 Proxmox 的 VMs 组成了 amd86 和 arm86 的混合集群。</p>













  
  
    
      <figure data-pswp="1536x2048" data-size="800x"><a href="/tutorials/how-to-homelab/part-1/eaidk-610.jpg" class="gallery-item" target="_blank" data-pswp-width="1536" data-pswp-height="2048"><img src="/tutorials/how-to-homelab/part-1/eaidk-610_hu074222726f2aa0440c99e8e5bdbae569_466590_800x0_resize_q75_box.jpg"
      alt="首发"/></a><figcaption><p class="source">首发<a href="https://twitter.com/icyleaf/status/1585792876235005953">@icyleaf@twitter</a>
    </p>

    <p>EAIDK 610 开发板</p></figcaption></figure>

<p>就这上面集群测试跑通的同时 J1900 主机也完成了对 <a href="https://twitter.com/icyleaf/status/1579499063577554945">nomad</a> 服务的试水并逐步稳定下来，后面也可以和 Proxmox VMs 组成混合集群。</p>
<p>内网穿透方面除了公网加端口之外多了 <a href="https://twitter.com/icyleaf/status/1539849981598740480">traefik hub</a> 方案。作为最早一批内测用户还额外拥有更多的免费额度，现在免费版限制最大 5 个公网服务。</p>
<p>Gen 8 在更换新的氦气盘转移数据有大量的视频转码工作要跑 CPU 有点吃不消，闲鱼 1230v2 价格 150 <a href="https://twitter.com/icyleaf/status/1564962797372395520">收了它</a>继续卖命，群晖<a href="https://twitter.com/icyleaf/status/1565176566535323649">需要修改</a>才能正确识别新 U。</p>
<h2 id="我的设备选择">我的设备选择</h2>
<blockquote>
<p>用了很长的篇幅介绍了我的设备演变史，从文字和拓扑图大家已经了解了七七八八，为了方便理解这里会再汇总一份供大家赏阅。在软硬件的折腾方面我总能想起<a href="https://www.gracecode.com/posts/3191.html">明城</a>大哥。</p>
</blockquote>
<p>软硬件我采用的是 <a href="https://www.thoughtworks.com/zh-cn/radar">thoughtworks 技术雷达</a> 的策略把任何一个方案划分成<code>评估</code>、<code>试验</code>、<code>采纳</code>和<code>暂缓</code> 4 个阶段，因此会包含很多解决方案，标记<code>采纳</code>的可安心服用。</p>
<h3 id="硬件">硬件</h3>
<div >
  
<table>
<thead><tr><th>主机代号</th>
<th>系统</th>
<th>阶段</th>
<th>数量</th>
<th>用途</th>
</tr></thead>
<tbody>
<tr>
<td>
  <a href="https://starcraft.fandom.com/wiki/Immortal">Immortal</a> <sup>amd64</sup>
  <br />9700k/32G/6TB/6600xt
</td>
<td>macOS<br />Windows</td>
<td><span class="badge bg-success">采纳</span></td>
<td>1</td>
<td>个人生产力工具</td>
</tr>
<tr>
<td>
  <a href="https://starcraft.fandom.com/wiki/Queen_(StarCraft_II)">Queen</a> <sup>amd64</sup><br />
  HP Gen8 (1230v2/8G/40TB)
</td>
<td>群晖</td>
<td><span class="badge bg-success">采纳</span></td>
<td>1</td>
<td>NAS</td>
</tr>
<tr>
<td>
  <a href="https://starcraft.fandom.com/wiki/Corruptor">Corruptor</a> <sup>amd64</sup><br />
  蜜獾超存 (8700es/64G/10TB)
</td>
<td>Promox</td>
<td><span class="badge bg-success">采纳</span></td>
<td>1</td>
<td>虚拟开发机</td>
</tr>
<tr>
<td>
  <a href="https://starcraft.fandom.com/wiki/Bunker">Bunker</a> <sup>amd64</sup><br />
  J1900/8G/1TB
</td>
<td>Debian</td>
<td><span class="badge bg-success">采纳</span></td>
<td>1</td>
<td>Nomad 集群成员</td>
</tr>
<tr>
<td>
  <a href="https://starcraft.fandom.com/wiki/Larva_(StarCraft_II)">Larva</a> <sup>amd64</sup><br />
  E3845/2G/16GB/i211<small>x4</small>
</td>
<td>Openwrt</td>
<td><span class="badge bg-success">采纳</span></td>
<td>1</td>
<td>软路由</td>
</tr>
<tr>
<td>
  <a href="https://starcraft.fandom.com/wiki/Splitter">Splitter</a> <sup>arm64</sup><br />
  EAIDK610 (RK3399/4G/6+128GB)
</td>
<td>Armbian</td>
<td><span class="badge bg-warning">试验</span></td>
<td>4</td>
<td>k3s 集群</td>
</tr>
<tr>
<td>
  <a href="https://starcraft.fandom.com/wiki/Lair">Lair</a> <sup>armv8</sup><br />
  H96 Pro+ (S912/4G/32GB)
</td>
<td>Android TV</td>
<td><span class="badge bg-success">采纳</span></td>
<td>1</td>
<td>影音电视盒子</td>
</tr>
<tr>
<td>
  <a href="https://starcraft.fandom.com/wiki/Drone">Drone</a> <sup>arm64</sup><br />
  Orange Pi 3 LTS
</td>
<td>Armbian</td>
<td><span class="badge bg-notice">评估</span></td>
<td>1</td>
<td>未完成的 IP KVM</td>
</tr>
</tbody></table>

</div>

<p>当主机出现故障需要维护时需要单独的显示器和键鼠，更好的解决方案是 <a href="https://github.com/stars/icyleaf/lists/ip-kvm">IP KVM</a>。现有方案要么仅支持树莓派 4B，要么需要两个开发板。我曾使用树莓派 3B 和 <a href="https://twitter.com/icyleaf/status/1539975823670710274">香橙派 3LTS</a> 刷入 <a href="https://github.com/tiny-pilot/tinypilot">tinypilot</a> 只能开启 HDMI 画面采集，无法模拟键鼠操作。</p>
<p>偏向底层及硬件一直是我的弱项，我想世界末日了我们这些写软件服务的都会在第一时间挂了吧，哈哈哈。</p>
<h4 id="硬盘">硬盘</h4>
<p>在个人能力范围内优先级考虑：<code>M2 SSD</code> &gt; <code>SATA SSD</code> &gt; <code>氦气盘</code> &gt; <code>非叠瓦盘</code>，这方面我也看着大家的建议买，建议是硬盘太多做好整理，尤其是购买时间，购买渠道，购买数量，硬盘编号，保质年限，过保时间以及定期的 SMART 检测数据记录。</p>













  
  
    
      <figure data-pswp="949x1253" data-size="800x"><a href="/tutorials/how-to-homelab/part-1/harddisk-2022-full.png" class="gallery-item" target="_blank" data-pswp-width="949" data-pswp-height="1253"><img src="/tutorials/how-to-homelab/part-1/harddisk-2022-full_hu04a2dabdf73291bf2078d685bd542bb0_847668_800x0_resize_box_3.png"/></a><figcaption>

    <p>硬盘大军</p></figcaption></figure>














  
  
    
      <figure data-pswp="1512x1538" data-size="800x"><a href="/tutorials/how-to-homelab/part-1/harddisk-category.png" class="gallery-item" target="_blank" data-pswp-width="1512" data-pswp-height="1538"><img src="/tutorials/how-to-homelab/part-1/harddisk-category_hudc0352c8205a256a2ea382889711a8c3_301266_800x0_resize_box_3.png"/></a><figcaption>

    <p>硬盘分布情况</p></figcaption></figure>

<h4 id="ups-电源">UPS 电源</h4>
<p>一次电力的闪断更有可能让服务器硬件（尤其是的硬盘）就会出现故障而坏掉，保证硬件和数据的安全性 UPS 电源是必备的，优先考虑支持通讯的，因为停电虽然有 UPS 可以用电池模式继续保持运行，电池电量是有限的服务器如果知道当前的状态进行安全关机。</p>
<div >
  
<table>
<thead><tr>
<th>UPS 设备</th>
<th>辐射范围</th>
<th>描述</th>
</tr></thead>
<tbody>
<tr>
<td>APC BK650</td>
<td>Proxmox + 黑群晖 + WIFI AP</a></td>
<td>连接 Proxmox 并开启 NUT 服务和<br /> apcupsd 数据接入 Prometheus</td>
</tr>
<tr>
<td>APC BK650</td>
<td>黑苹果 + Armbian 集群 + Nomad</a></td>
<td>连接 Nomad 并开启 NUT 服务<br /> apcupsd 数据接入 Prometheus</td>
</tr>
<tr>
<td><a href="https://twitter.com/icyleaf/status/1590351704020910080">弱电箱 UPS</a></td>
<td>光猫 + 软路由 + 交换机</a></td>
<td>软路由接受其他两个 NUT 通知<br />四口 12V 还富裕一个</td>
</tr>
</tbody></table>

</div>

<p>我只使用过施耐德 APC 带有通讯协议的 UPS 基本上可通过 <a href="http://www.apcupsd.org/">apcupsd</a> 或 NUT（绝大多数 NAS 系统比如群晖、威联通等都支持）通过该服务可以让没有直接插通讯线的设备也能过接收到通知并执行安全关机操作<sup id="fnref:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup>。详细请看[使用NUT和apcupsd将群晖NAS接入UPS不间断电源]获得配置教程。</p>
<h3 id="软件">软件</h3>
<h4 id="操作系统">操作系统</h4>
<div >
  
<table>
<thead><tr><th>操作系统</th>
<th>阶段</th>
<th>描述</th>
</tr></thead>
<tbody>
<tr>
<td><a href="https://www.proxmox.com/">proxmox</a></td>
<td><span class="badge bg-success">采纳</span></td>
<td>高可玩性且兼具自动化管理的虚拟机系统</td>
</tr>
<tr>
<td><a href="https://www.debian.org/">debian</a></td>
<td><span class="badge bg-success">采纳</span></td>
<td>作为服务器个人最熟悉的基础 amd64 OS</td>
</tr>
<tr>
<td><a href="https://www.armbian.com/">armbian</a></td>
<td><span class="badge bg-success">采纳</span></td>
<td>ARM 版本的 Debian，理由同上</td>
</tr>
<tr>
<td><a href="https://openwrt.org/">openwrt</a></td>
<td><span class="badge bg-success">采纳</span></td>
<td>可玩性很高的开源软路由系统</td>
</tr>
<tr>
<td><a href="https://www.talos.dev/">talos</a></td>
<td><span class="badge bg-warning">试验</span></td>
<td>100% API 管理且支持多部署环境的基于 k8s 实现的发行版</td>
</tr>
<tr>
<td><a href="https://pi-hole.net/">pi-hole</a></td>
<td><span class="badge bg-warning">试验</span></td>
<td>国外非常流行的 DNS 管理系统，界面友好</td>
</tr>
<tr>
<td><a href="https://rockstor.com/">rockstor</a></td>
<td><span class="badge bg-notice">评估</span></td>
<td>基于 openSUSE + btrfs 的 NAS 系统，支持 SMART 和 NUT<br />注意<a href="https://twitter.com/icyleaf/status/1610885440961404929">不兼容 Asia/Beijing 时区</a></td>
</tr>
<tr>
<td><a href="https://kairos.io/">kairos</a></td>
<td><span class="badge bg-notice">评估</span></td>
<td>新发布的容器化系统，感兴趣但还没成功跑通</td>
</tr>
<tr>
<td><a href="https://www.openmediavault.org/">omv</a></td>
<td><span class="badge bg-danger">暂缓</span></td>
<td>完成度高的 NAS 系统但个人无爱</td>
</tr>
<tr>
<td><a href="https://vmware.github.io/photon/">photonOS</a></td>
<td><span class="badge bg-danger">暂缓</span></td>
<td>Vmware 虚拟化优化但嫌弃 redhat 系统</td>
</tr>
<tr>
<td><a href="https://www.tritondatacenter.com/smartos">smarterOS</a></td>
<td><span class="badge bg-danger">暂缓</span></td>
<td>支持虚拟化和 ZFS 但依赖高内存成度的 NAS 系统但个人无爱</td>
</tr>
</tbody></table>

</div>

<p>性能强大的机器以 Proxmox 作为宿主机内部套 Debian 或 Armbian 来跑所需的服务或基于容器化技术的编排管理服务或容器化系统（Linux Container OS<sup id="fnref:5"><a href="#fn:5" class="footnote-ref" role="doc-noteref">5</a></sup>）</p>
<h4 id="文件系统">文件系统</h4>
<div >
  
<table>
<thead><tr><th>类型</th>
<th>阶段</th>
<th>描述</th>
</tr></thead>
<tbody>
<tr>
<td>btrfs</td>
<td><span class="badge bg-success">采纳</span></td>
<td>磁盘管理方便，支持快照和 COW</td>
</tr>
<tr>
<td>ext4</td>
<td><span class="badge bg-success">采纳</span></td>
<td>最保险的文件系统</td>
</tr>
<tr>
<td>zfs</td>
<td><span class="badge bg-notice">评估</span></td>
<td>强健可靠、可伸缩、易于管理就是吃内存</td>
</tr>
<tr>
<td>xfs</td>
<td><span class="badge bg-notice">评估</span></td>
<td>据说速度很快，个人没有太多研究<br />talos <a href="https://www.talos.dev/v1.3/learn-more/architecture/">默认文件系统</a></td>
</tr>
</tbody></table>

</div>

<p>个人优先级选择 <code>btrfs</code> &gt; <code>ext4</code> &gt; <code>zfs</code> &gt; <code>xfs</code>。注意的是 btrfs 现阶段不建议使用 <a href="https://btrfs.wiki.kernel.org/index.php/Status#RAID56">RAID 5/6</a>，不太考虑 zfs 是组 RAID 后新增硬盘麻烦且有成本。xfs 真不了解，感兴趣的可以看下以上文件系统<a href="https://www.dimoulis.net/posts/benchmark-of-postgresql-with-ext4-xfs-btrfs-zfs/">在 PostgreSQL 的基准测试</a>。</p>
<p>对于 btrfs 我个人的看法是只有自己尝试过才知道结果，尽管 Promox <a href="https://www.proxmox.com/en/news/press-releases/proxmox-virtual-environment-7-0">7.0</a> 第一把 btrfs 作为<a href="https://pve.proxmox.com/wiki/BTRFS">技术预览</a>的情况下发布，我也做了小白鼠使用它在将近 2 年的时间内基本正常，只有一次小故障还是因淘宝买的垃圾硬盘质量太差出现太多的坏道。btrfs 在 RAID10 最低 4 块磁盘的前提下移除掉坏盘也能过正常工作（删减都做一次 <a href="https://btrfs.readthedocs.io/en/latest/Balance.html">balance</a> 即可），除此之外我并没有遇到任何问题。虽然 COW 特性会拖累磁盘 IO 现状也都能接受。</p>
<p>对 btrfs 感兴趣的小伙伴推荐看 <a href="https://twitter.com/Houge_Langley">@Houge</a> 的<a href="https://www.bilibili.com/video/BV1Fh411e7Wk/">教学视频</a>或者 openSUSE 官方推出的<a href="https://www.bilibili.com/video/BV115411u7bU/">入门教学视频</a>。用过或已入门 btrfs 的可深入阅读 <a href="https://farseerfc.me/zhs/btrfs-vs-zfs-difference-in-implementing-snapshots.html">btrfs 与 zfs 快照实现差异</a>，<a href="https://linuxhint.com/btrfs-vs-xfs-brief-comparison/">btrfs 与 xfs 对比</a>，<a href="https://markmcb.com/2020/01/07/five-years-of-btrfs/">Five Years of Btrfs</a> 和 <a href="https://it-notes.dragas.net/2018/10/13/btrfs-best-pratices/">BTRFS Best Practices</a> 做到心中有数。</p>
<h4 id="存储服务">存储服务</h4>
<div >
  
<table>
<thead><tr><th>服务</th>
<th>阶段</th>
<th>描述</th>
</tr></thead>
<tbody>
<tr>
<td>samba</td>
<td><span class="badge bg-success">采纳</span></td>
<td>兼容性和实用性最高，仅建议手动文件挂载使用</td>
</tr>
<tr>
<td>nfs</td>
<td><span class="badge bg-success">采纳</span></td>
<td>可作为最低保障数据挂载</td>
</tr>
<tr>
<td><a href="https://min.io/">minos</a></td>
<td><span class="badge bg-success">采纳</span></td>
<td>兼容 S3 应用的开源存储服务</td>
</tr>
<tr>
<td><a href="https://juicefs.com/">juicefs</a></td>
<td><span class="badge bg-warning">试验</span></td>
<td>S3 兼容且 POSIX 兼容性高的开源存储服务</td>
</tr>
<tr>
<td><a href="https://longhorn.io/">longhorn</a></td>
<td><span class="badge bg-warning">试验</span></td>
<td>简单好用的块存储开源服务，磁盘迁移<a href="https://twitter.com/icyleaf/status/1607372383245172737">很容易</a></td>
</tr>
<tr>
<td><a href="https://rook.github.io/">rook ceph</a></td>
<td><span class="badge bg-notice">评估</span></td>
<td>当下具有很大潜力的云原生存储服务</td>
</tr>
<tr>
<td><a href="https://github.com/openebs/Mayastor">mayastor</a></td>
<td><span class="badge bg-notice">评估</span></td>
<td>针对 NVME 优化的块存储服务</td>
</tr>
</tbody></table>

</div>

<p>存储方面之前都是 Samba、NFS 甚至只用 APF，直到 2022 年才正式开始在生产环境试验，尤其是针对 k8s 的存储我还是一个小白。</p>
<h4 id="容器化管理及编排服务">容器化管理及编排服务</h4>
<p><div >
  
<table>
<thead><tr><th>服务</th>
<th>阶段</th>
<th>描述</th>
</tr></thead>
<tbody>
<tr>
<td><a href="https://www.portainer.io/">portainer</a></td>
<td><span class="badge bg-success">采纳</span></td>
<td>支持 Docker/k3s/nomad 多种编排服务的管理服务
</div>
<sup id="fnref:6"><a href="#fn:6" class="footnote-ref" role="doc-noteref">6</a></sup><div >
  </td>
</tr>
<tr>
<td><a href="https://kubesphere.io/">kubesphere</a></td>
<td><span class="badge bg-danger">暂缓</span></td>
<td>新手和企业友好的 k8s 前端容器管理服务，整体来说有点重</td>
</tr>
<tr>
<td><a href="https://www.nomadproject.io/">nomad</a></td>
<td><span class="badge bg-success">采纳</span></td>
<td>入门门槛较低但缺乏教学资料的编排服务</td>
</tr>
<tr>
<td><a href="https://k3s.io/">k3s</a></td>
<td><span class="badge bg-warning">试验</span></td>
<td>针对边缘计算、物联网等场景进行了高度优化轻量级的 k8s 发行版</td>
</tr>
<tr>
<td><a href="https://kubernetes.io/">kubernetes</a></td>
<td><span class="badge bg-notice">评估</span></td>
<td>100% 正统血缘 k8s，不敢靠近 :D</td>
</tr>
<tr>
<td><a href="https://docs.docker.com/engine/swarm/">docker swarm</a></td>
<td><span class="badge bg-danger">暂缓</span></td>
<td>官方自己都快弃权的编排服务，不推荐</td>
</tr>
</tbody></table>

</div>
</p>
<p>Portainer 是一款新人友好的容器管理工具，至今我现在也还在用。k3s 也是最容易跨进 k8s 世界且 edge 友好的编排服务。</p>
<h4 id="网关">网关</h4>
<div >
  
<table>
<thead><tr><th>服务</th>
<th>阶段</th>
<th>描述</th>
</tr></thead>
<tbody>
<tr>
<td><a href="https://doc.traefik.io/traefik/">traefik</a></td>
<td><span class="badge bg-success">采纳</span></td>
<td>个人认为最好用的网关服务</td>
</tr>
<tr>
<td><a href="https://caddyserver.com/">caddy</a></td>
<td><span class="badge bg-success">采纳</span></td>
<td>简单好用的支持 Let's Encrypt 的网关服务</td>
</tr>
<tr>
<td><a href="https://www.nginx.com/">nginx</a></td>
<td><span class="badge bg-success">采纳</span></td>
<td>管理多域名可考虑 <a href="https://nginxproxymanager.com">nginx manager</a></td>
</tr>
</tbody></table>

</div>

<p>虽然都是标记的<code>采纳</code>，我主要用前两个，网关首推 traefik，简单使用 caddy，前两个简单好用功能还强大我想不出来理由用第三个。</p>
<h4 id="自动化部署">自动化部署</h4>
<div >
  
<table>
<thead><tr><th>服务</th>
<th>阶段</th>
<th>描述</th>
</tr></thead>
<tbody>
<tr>
<td><a href="https://www.ansible.com/">ansible</a></td>
<td><span class="badge bg-success">采纳</span></td>
<td>无代理（利用 SSH）就能自动化部署的配置工具</td>
</tr>
<tr>
<td><a href="https://www.terraform.io/">terraform</a></td>
<td><span class="badge bg-success">采纳</span></td>
<td>只要有接口管理的服务都能自动化部署的工具<br />还是 ansible 最佳排挡</td>
</tr>
<tr>
<td><a href="https://fluxcd.io/flux/">fluxcd</a></td>
<td><span class="badge bg-warning">试验</span></td>
<td>最好用的 gitops 里对 k8s 自动配置部署工具</td>
</tr>
<tr>
<td><a href="https://argo-cd.readthedocs.io/">argocd</a></td>
<td><span class="badge bg-warning">试验</span></td>
<td>gitops 里对 k8s 自动配置部署还有可视化拓扑图</td>
</tr>
<tr>
<td><a href="https://www.pulumi.com/">pulumi</a></td>
<td><span class="badge bg-warning">试验</span></td>
<td>支持多种原生语言配置版本的 terraform<br />实现架构优秀，使用者友好，插件开发者痛苦</td>
</tr>
<tr>
<td><a href="https://saltproject.io/">salt</a></td>
<td><span class="badge bg-danger">暂缓</span></td>
<td>有代理，当初一经面世就要碾压 ansible 的方案<br />看看市场的选择，它也不咋地嘛</td>
</tr>
</tbody></table>

</div>

<p>只要是跟操作系统打交道的 ansible + terraform 打遍天下无敌手！fluxcd 在对 k8s 服务配置和部署上确实找不出毛病，门槛有就看你能不能入门，建议在熟悉 k8s 基础概念和有一定实际部署经验后再使用。</p>
<h2 id="不容忽视的因素">不容忽视的因素</h2>
<p>大量的篇幅介绍了我个人 homelab 设备架构演变和软硬件的选择，还有什么容易忽略的因素呢？</p>
<p>如果把设备比做核心建筑，不容忽视的因素那就是基础建设。两手都要抓这样才能以确保 homelab 能够发挥最大的效能，谁也不想性能无法 100% 压榨或意外故障的发生。</p>
<h3 id="网线规格">网线规格</h3>
<p><strong><code>务必保证所有 homelab 的设备都接入千兆以上有线网络</code></strong>，WIFI 会收到周围信道干扰、传输衰减等不稳定性问题，以下是网线的规格汇总：</p>
<p><div >
  
<table>
<thead>
<tr>
<th>规格</th>
<th>命名</th>
<th>速率</th>
<th>接口</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>CAT 5</td>
<td>五类线</td>
<td>100Mbps</td>
<td>RJ45</td>
<td>不推荐</td>
</tr>
<tr>
<td>CAT 5E</td>
<td>超五类线</td>
<td>1000Mbps</td>
<td>RJ45</td>
<td>最低限度</td>
</tr>
<tr>
<td>CAT 6</td>
<td>六类线</td>
<td>1Gbps/10Gbps
</div>
<sup id="fnref:7"><a href="#fn:7" class="footnote-ref" role="doc-noteref">7</a></sup><div >
  </td>
<td>RJ45</td>
<td>万兆网络仅限 50 米内</td>
</tr>
<tr>
<td>CAT 6A</td>
<td>超六类线</td>
<td>10Gbps</td>
<td>RJ45</td>
<td>200 米内可达万兆网络<br />没有 6E 标准</td>
</tr>
<tr>
<td>CAT 7</td>
<td>七类线</td>
<td>10Gbps</td>
<td>GG45/TERA</td>
<td>带着遮蔽</td>
</tr>
<tr>
<td>-</td>
<td>光纤</td>
<td></td>
<td></td>
<td>不懂，详见<a href="https://zh.wikipedia.org/zh-cn/%E5%85%89%E7%BA%96%E9%80%9A%E8%A8%8A">维基百科</a></td>
</tr>
</tbody>
</table>

</div>
</p>
<p>再次重申 <strong><code>千兆以上网络是不可或缺的</code></strong>，推荐使用 CAT 6/6A 规格，土豪们 CAT 7 或光纤随意。</p>
<p>假如你不知道家里网络的状态提供两种方法检查：</p>
<ol>
<li>查看网线上面的印字会有网线规格标识</li>
<li>过 <a href="https://github.com/esnet/iperf">iperf3</a> 在两台任意可连接有线的设备充当服务器端和客户端进行检测。</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl"><span class="c1"># 一台开启服务端，假设服务器 IP 是 192.168.1.100</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl">iperf3 -s
</span></span><span class="line"><span class="ln">3</span><span class="cl">
</span></span><span class="line"><span class="ln">4</span><span class="cl"><span class="c1"># 一台开客户端，连接服务端进行测试</span>
</span></span><span class="line"><span class="ln">5</span><span class="cl">iperf3 -c 192.168.1.100
</span></span></code></pre></div><h3 id="噪音和散热">噪音和散热</h3>
<ul>
<li>硬件
<ul>
<li>机械硬盘读写盘的噪音（有钱就全 SSD 或等待 <a href="https://twitter.com/icyleaf/status/1619937731777556486">EDSFF E1/E3 卡</a>民用）</li>
<li>风扇的轴承、转速和大小也会产生噪音（CPU 散热、显卡、机箱、电源等）</li>
<li>主板 DEBUG 蜂鸣器（有的可关闭或<a href="https://twitter.com/icyleaf/status/1432343002765139968">拆除</a>）</li>
</ul>
</li>
<li>软件
<ul>
<li>群晖为保障系统稳定性默认会全盘写入系统作为 backup 若要解决噪音问题建议<a href="https://twitter.com/icyleaf/status/1620093653791436800">策略性移除</a></li>
<li>Linux 系统可考虑使用 <a href="https://wiki.archlinux.org/title/fan_speed_control">lm-sensors</a> 侦测配置</li>
</ul>
</li>
<li>空间
<ul>
<li>摆放位置决定噪音耐受度和散热效率</li>
</ul>
</li>
</ul>
<h3 id="省电和功率">省电和功率</h3>
<p>CPU 的待机 TPW 只是参考，还需要考虑硬盘，内存和显卡整体，还需要考虑峰值功率，这块没有太多可展开的。要考虑能效但也不过分的在意，尤其是为了降低 5 - 10w TPW 而购买溢价过高的产品，这个在前篇的小结也有提到。</p>
<!-- raw HTML omitted -->
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>我记得是在<a href="https://bbs.nas66.com/">矿渣社区</a>看到的发车，后来看的<a href="https://post.smzdm.com/p/andr83k3/">阿文菌</a>的文章。&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p>官方提供<a href="https://pve.proxmox.com/wiki/Backup_and_Restore">备份和恢复</a>方法，Github Gist 也有<a href="https://gist.github.com/mrpeardotnet/6bdc4b504f43ce57fa7eaee96d376edf">备份脚本</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p>以疫情为由成本上升，国内市场 4B 最高能卖到 1200，我吃灰的 3B 都卖了 600 块&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:4">
<p><a href="https://blog.irain.in/archives/NUT_apcupsd_Synology_DSM_UPS.html">配置教程</a>和关机方案 <a href="https://blog.k8s.li/apcupsd-on-openwrt-with-esxi.html">1</a>、<a href="https://github.com/mingcheng/apcupsd_guarder">2</a>&#160;<a href="#fnref:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:5">
<p>关于容器化 OS 可选性可以看看 <a href="https://blog.k8s.li/Photon-OS.html">Reimu 的博文</a>&#160;<a href="#fnref:5" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:6">
<p>Nomad 支持需要付费增值服务，可免费申请试用 License&#160;<a href="#fnref:6" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:7">
<p>带宽是 1000 进制，1Gbps = 1000Mbps = 千兆网络, 10Gbps = 万兆网络&#160;<a href="#fnref:7" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded></item><item><title>如何搭建家用 homelab: 先导篇</title><link>https://icyleaf.com/2022/02/how-to-homelab-part-0/</link><pubDate>Sat, 12 Feb 2022 20:00:00 +0800</pubDate><guid>https://icyleaf.com/2022/02/how-to-homelab-part-0/</guid><description>搭建 homelab 之前都需要了解哪些背景</description><content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>这将会是一个持续系列的主题文章，你将会从最基础的家庭 homelab 搭建开始循序渐进到一些进阶的系统、网络、服务层面的学习。我尽可能以新人的角色描述简单易懂的语言，系列文章会涉及家庭网络、路由器、Linux、数据储存、NAS、服务化等等，如果你在过程中又遇到任何问题，欢迎给我留言。</p>













  
  
    
      <figure data-pswp="4644x3004" data-size="800x"><a href="/tutorials/how-to-homelab/part-0/homelab-diagram-v2.0.png" class="gallery-item" target="_blank" data-pswp-width="4644" data-pswp-height="3004"><img src="/tutorials/how-to-homelab/part-0/homelab-diagram-v2.0_hud6b13e642cdec1b76e4883675cc1f0da_933051_800x0_resize_box_3.png"
      alt="图片来源"/></a><figcaption><p class="source">图片来源<a href="https://twitter.com/icyleaf/status/1472036769742745603">@icyleaf@twitter.com</a>
    </p>

    <p>2021 年底 v2.0 镇楼用的网络拓扑图</p></figcaption></figure>

<h2 id="搭建-homelab-起因">搭建 homelab 起因</h2>
<blockquote>
<p>homelab: a laboratory of (usually slightly outdated) awesome in the domicile</p>
</blockquote>
<p>从语言直译来看可以说是家庭 homelab，把这个事情延展到网络及服务上面那就可以干很多有意思的事情，比如：</p>
<ul>
<li>NAS 存储：资源下载、存放任何的数据（照片、小姐姐、学习资料、代码等）</li>
<li>影视库：从最简单的网络共享文件夹到可以托管影视管理、播放、转码为一体的 Jellyfin、Plex 服务</li>
<li>网络管理：设备限流、流量审计、防火墙策略</li>
<li>应用开发：做一些 side projects 需要开发环境、缓存、数据存储等</li>
<li>DevOps：ansible、salt、k8s 来操作维护多个服务器、VM 或者是 lxc</li>
</ul>
<p>如果您恰好是一名软件应用开发者，homelab 是最佳的扩展你的技能的很好的实验田，学习网络拓扑、Linux 系统、安全管理等。
对于大部分人来说或许多多少少都会听说过 NAS 服务器，其实他也是 homelab 的实践应用之一。</p>
<p>不要被它的名字吓到，本质上它就是在一个操作系统上面跑一堆上面提到和没提到的服务而已。</p>
<h2 id="自建考虑的点">自建考虑的点</h2>
<p>无论上面提到的点有多么吸引你想要组件自己的家庭 homelab，您还要慎重考虑是否真的需要，毕竟真的整一套也会投入很大的精力和一些资金，千万不要没有需求创造需求。</p>
<blockquote>
<p>本系列的内容会优先考虑使用开源、免费的解决方案，如果真的无法满足会分享一些商业的解决方案。</p>
</blockquote>
<h2 id="商业成品方案">商业成品方案</h2>
<p>商业成品主要是售卖软件服务来提供类网络管理、数据存储等的解决方案，市面上主流的主要是：</p>
<ul>
<li><a href="https://www.synology.com/">群晖</a>: 搭配硬件售卖，各方面都非常令人满意的软件系统，对小白非常友好</li>
<li><a href="https://www.qnap.com/">威联通</a>: 搭配硬件售卖的软件，价格比群晖有优势，软件系统相对群晖要逊色不少</li>
<li><a href="https://unraid.net/">UnRaid</a>: 一款商业的 NAS 系统，但提供快速扩容、Docker 和 VM 管理</li>
<li><a href="https://store.ui.com/collections/unifi-network-unifi-os-consoles">UniFi OS</a>: 主要是 Dream Machine 搭载的系统，整体下来价格非常昂贵</li>
</ul>
<p>通常情况下商业成品是一站式的解决方案，采购的话费用也会比自建要投入更多的资金，这个就不再 homelab 的考虑范围，这里就一笔带过。</p>
<h2 id="开源免费方案">开源&amp;免费方案</h2>
<p>自建 homelab 必然会从硬件、软件下手，准备好了再决定网络拓扑结构。</p>
<h2 id="硬件筛选">硬件筛选</h2>
<p>国内和国外的硬件环境有非常大的不同，国内有很多的洋垃圾、魔改硬件的讨论，比如您可能听说过的 E3/E5 神教、垃圾佬之类的名词。
若你是这个领域的行家恭喜你会省不少钱；若你不是也不用沮丧踏踏实实的花钱买数据安全，切记也不要盲目入手垃圾佬的硬件，捡垃圾有风险，有些硬件会被超的很高这样的性价比也会很低而不值得入手。</p>
<p>最关键的几个部分：CPU、内存、主板、网络和硬盘。</p>
<ul>
<li>CPU 和内存很好理解，CPU 核心数量、内存容量越多越能造，如果对于影视播放有要求就需要 CPU 有好的核心支持。</li>
<li>主板对网口数量、扩展槽会有依赖，网口数量和硬盘数量支持不多就要靠扩展槽来凑。</li>
<li>网络状况至关重要，WiFi 6 传输速度还是不如千兆有线，评估下自己家里猫和路由器最低要求千兆网络，有线也尽量是 CAT5e/CAT6 规格</li>
<li>NAS 应用场景对硬盘容量和规格要求比较高，SSD 不是强需求，如果不差钱全上 SSD 也不是不行。</li>
</ul>
<p>这里每一个展开聊都是非常大的话题，我可能会整理一些外部资源供您去补充这方面的知识。市面上也有一些成品硬件的解决方案，您也可以考虑：</p>
<ul>
<li>英特尔 NUC：小巧的机型并不代表他的性能很弱，最新 12 代的 NUC 从各方面都是很好的选择</li>
<li>联想 ThinkCentre 系列：比 NUC 稍微大点，这个系列体系非常的庞大且悠久，也有不少价格合适的二手和改装件，但会折腾一些</li>
<li>惠普 MicroServer Gen 系列：Gen8/Gen10 都是目前主流的 homelab 解决方案，正统服务器规格和特性。（我有一台 Gen 8 正在服役）</li>
<li>各种开发板：比如树莓派从 3B 开始它也能做一些 homelab 的应用场景，国内外资料丰富，配件众多。唯一的缺点受新冠影响它的价格在国内居高不下，可以考虑一些其他成熟的开发板。</li>
<li>各种矿渣主机：区块链盛行的挖矿行业充斥着很多挖矿主机，比如星际蜗牛、绿盘、蜜獾超存等，有些硬件参数还不错到手之后需要调节或改下静音风扇就可用。</li>
</ul>
<p>最简单的版本就是可以找一个可以长期运行的不再使用的笔记本电脑、台式电脑就能起步（功耗太高的话就真的算了）</p>
<h2 id="软件部署方案">软件部署方案</h2>
<p>硬件准备完备之后，我们来考虑搭配哪种软件部署方案，通常会被划分为三大类：</p>
<ul>
<li>传统部署（Traditional Deployment）</li>
<li>虚拟化部署（Virutalization Deployment）</li>
<li>容器化部署（Containerd Deployment）</li>
</ul>












<figure data-pswp="1800x650" data-size="0x0"><a href="/tutorials/how-to-homelab/part-0/container-evolution.svg" class="gallery-item" target="_blank" data-pswp-width="1800" data-pswp-height="650"><img src="/tutorials/how-to-homelab/part-0/container-evolution.svg"
      alt="图片来源"/></a><figcaption><p class="source">图片来源<a href="https://kubernetes.io/zh/docs/concepts/overview/what-is-kubernetes/">Kubernetes 是什么？</a>
    </p>

    <p>部署方式的演变</p></figcaption></figure>

<p>通常在硬件性能还算不错情况下都不会采用传统部署的方案，单主机的优先级：容器化 &gt; 虚拟化 &gt; 传统部署，机器性能不错且有技术兴趣度的优先级：虚拟化 &gt; 容器化 &gt; 传统部署。</p>
<h3 id="传统部署">传统部署</h3>
<p>传统部署通常是在 Bare-metal 机器上面进行的，因此我把它俩划为等号，它使用硬件主机安装操作系统如 Window、macOS 和 *nix (Unix/Linux) 后直接安装和部署服务，听起来没什么特别的，
市面上也会有很多的运维工具用于解决安装系统、配置环境、后期维护、数据备份的工作，比如 Salt、Ansible、Puppet 等有一定的学习成本，没法做到开箱即用， 100% 发挥硬件机能也会是一个问题。</p>













  
  
    
      <figure data-pswp="1920x1080" data-size="800x"><a href="/tutorials/how-to-homelab/part-0/bare-metal.jpg" class="gallery-item" target="_blank" data-pswp-width="1920" data-pswp-height="1080"><img src="/tutorials/how-to-homelab/part-0/bare-metal_hu4b369ced3c986b922f395ae6ff16aca0_920504_800x0_resize_q75_box.jpg"
      alt="图片来源"/></a><figcaption><p class="source">图片来源<a href="https://thecloudgirl.dev/BareMetal.html">The Cloud Girl</a>
    </p>

    <p>Bare metal 方案</p></figcaption></figure>

<h3 id="虚拟化部署">虚拟化部署</h3>
<ul>
<li><a href="https://www.vmware.com/products/esxi-and-esx.html">ESXi</a>: VMware 公司开发的硬件虚拟化解决方案，界面简单易用，自身功能较强，付费使用</li>
<li><a href="https://www.proxmox.com">Proxomx</a>: 基于 Debian 开发企业级虚拟化系统，支持硬件直通，可扩展集群，上手难度略高，简称 PVE</li>
</ul>
<p>基于开源解决方案实在没有太多可选性，PVE 是市面上最成熟、社区活跃也很高的方案，
就算遇到奇奇怪怪的问题善用搜索引擎代替上都可以解决。</p>
<h3 id="容器化部署">容器化部署</h3>
<ul>
<li><a href="https://www.docker.com/">Docker</a>: 现代容器化的开山鼻祖，自己比较作引发了大叛逃就有了下面两个解决方案</li>
<li><a href="https://containerd.io/">Containerd</a>: 始于 Docker 母公司，壮大在 CNCF 基金会，提供 nerdctl 代替 docker CLI</li>
<li><a href="https://podman.io/">Podman</a>: Red Hat 公司领导的兼容 Docker 的解决方案</li>
</ul>
<p>一句话总结没看懂就用 docker 就行。</p>
<h2 id="基础系统">基础系统</h2>
<p>如果选择传统部署随便用一个你熟悉且满足你需求的操作系统即可</p>
<h2 id="应用服务">应用服务</h2>
<p>定好软硬件的基础后您需要面对非常庞大的应用服务来扩展和丰富 homelab</p>
<h3 id="初阶方案">初阶方案</h3>
<h4 id="软路由">软路由</h4>
<ul>
<li><a href="https://github.com/openwrt/openwrt">openwrt</a>: 国内最近今年非常主流的解决方案，国内有个 <a href="https://github.com/immortalwrt/immortalwrt">immortalwrt</a> 分支版本</li>
<li><a href="https://www.asuswrt-merlin.net/">梅林</a>: 华硕开源的路由器固件，同样国内有个 <a href="https://www.koolcenter.com/">koolcenter</a> 改版</li>
<li><a href="https://dd-wrt.com/">dd-wrt</a>: 在流行刷路由器初期的懵懂的固件，受限于硬件支持度和更新频率渐行渐远，当时支持多 wan 的 tomato</li>
</ul>
<h4 id="网关">网关</h4>
<ul>
<li><a href="https://www.nginx.com/">nginx</a>: 老牌传统网关，用于托管或反向代理网站服务</li>
<li><a href="https://caddyserver.com/">caddy v2</a>: 现代化设计的 HTTP/2 且支持 <a href="https://letsencrypt.org/">Let’s encrypt</a> 的网关</li>
</ul>
<h4 id="dns">DNS</h4>
<ul>
<li><a href="https://dnsmasq.org/">dnsmasq</a>: 一切的基础，用于配置 DNS 和 DHCP 服务</li>
<li><a href="https://pi-hole.net/">pi-hole</a>: 主打保护隐私和过滤广告的路由系统，常用海外用户</li>
<li><a href="https://adguard.com/zh_cn/adguard-home/overview.html">adguard home</a>: 专注保护隐私和过滤广告全网广告拦截的服务，提供用户友善的 UI 界面</li>
<li><a href="https://github.com/pymumu/smartdns">smartDNS</a>: 加速 DNS 解析分流的 DNS 服务</li>
<li><a href="https://github.com/IrineSistiana/mosdns">mosdns</a>: 集 smartDNS 和 adguard home 优点并存的 DNS 服务但配置麻烦</li>
</ul>
<h4 id="防火墙">防火墙</h4>
<ul>
<li><a href="https://www.netfilter.org/projects/iptables/index.html">iptables</a>: Linux 常见的内置防火墙</li>
<li><a href="https://www.netfilter.org/projects/nftables/index.html">nftables</a>: iptables 的官方增强版，未来的趋势都会慢慢迁移过来</li>
<li><a href="https://www.pfsense.org/">pfSense</a>: 国外普遍使用的一款开源防火墙</li>
</ul>
<h4 id="nas">NAS</h4>
<ul>
<li><a href="">OpenMediaValut</a>: 硬件依赖低门槛的综合性 NAS 系统</li>
</ul>
<h4 id="服务部署">服务部署</h4>
<ul>
<li><a href="https://www.portainer.io/">portainer</a>: 简单容易上手的容器化部署解决方案</li>
</ul>
<h4 id="影音">影音</h4>
<ul>
<li><a href="https://jellyfin.org/">Jellyfin</a>: 影视剧、电影等媒体播放服务，支持片源资料搜刮和看过数据同步服务</li>
</ul>
<h4 id="应用">应用</h4>
<ul>
<li><a href="https://bitwarden.com/">Bitwarden</a>: 开源且完全可代替 1 Password 的全平台密码生成管理服务，推荐使用开发者用 Rust 重写的 <a href="https://github.com/dani-garcia/vaultwarden">vaultwarden</a></li>
<li><a href="https://zoneminder.com/">ZoneMinder</a>: 开源多路摄像头&amp;录像管理服务</li>
</ul>
<p>更多的应用可以关注我的<a href="https://github.com/stars/icyleaf/lists/self-host-services">自建服务集合</a></p>
<h3 id="高级进阶">高级进阶</h3>
<p>下面介绍的也仅限于我个人能力范围内目前想到的点，能力有限也请手下留情。</p>
<h4 id="网关-1">网关</h4>
<ul>
<li><a href="https://traefik.io/traefik/">traefik</a>: 一款开源的反向代理与负载均衡综合性工具</li>
</ul>
<h4 id="nas-1">NAS</h4>
<ul>
<li><a href="https://www.truenas.com/">TrueNAS</a>: 国外做数据存储的首选，基于 ZFS 文件系统内存大小决定磁盘容量的上限，前身叫 FreeNAS</li>
</ul>
<h4 id="服务部署-1">服务部署</h4>
<ul>
<li><a href="https://kubernetes.io/">Kubernetes</a>: 现代容器化编排系统，所谓的云 YAML 工程师终极工具 😆</li>
</ul>
<h2 id="小结">小结</h2>
<p>homelab 玩法的可能性是无限的，不要把想象力局限在这几年国内流行的所谓 AIO Boom：
使用 pve 部署一切，更甚者用 openwrt + docker 部署各自服务出现问题先不说，
真遇到服务器宕机一波全带走。</p>
<p>另外不要太过于计较服务器的功耗情况，只要不是电耗子 35W 还是 65W 没省多少电费，
下面是一个正面例子，虽然用的是 X99-T8D + E5 2696V3*2 + 金河田 6100 双路电源
但开发者主要用于适合自己场景的使用，那就不是浪费。</p>
<blockquote class="twitter-tweet"><p lang="zh" dir="ltr">太牛逼了！今天把 <a href="https://twitter.com/wey_gu?ref_src=twsrc%5Etfw">@wey_gu</a> 哥哥送给我的 NUMA Server 弄好了，这是我人生中第一次拥有 NUMA，看到配置的时候直接惊住了，大半夜微信骚扰 Wey 哥哥表达自己的震惊和感谢，心想我何德何能可以拥有这么豪华的配置！在上面起了几个 VM 组了个 k8s 集群，终于不用紧张兮兮地在我的 MBP 上起 k8s 了！开心！ <a href="https://t.co/B9uwSiQXxK">pic.twitter.com/B9uwSiQXxK</a></p>&mdash; yetone (@yetone) <a href="https://twitter.com/yetone/status/1540235004495921152?ref_src=twsrc%5Etfw">June 24, 2022</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>下面这个图中的例子是一个反面教材，要么哗众取宠要么非蠢即坏。</p>
<blockquote class="twitter-tweet"><p lang="zh" dir="ltr">待机 100W 的低性能 NAS，这是图什么😂 <a href="https://t.co/WgphSsjobb">pic.twitter.com/WgphSsjobb</a></p>&mdash; taresky (@taresky) <a href="https://twitter.com/taresky/status/1555752846334705666?ref_src=twsrc%5Etfw">August 6, 2022</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>最后的忠告，国内各自信息咨询站的 OpenWrt，NAS 文章看看就行，别太认真。
有那时间不如多看看官方文档，官方社区讨论 :D</p>
]]></content:encoded></item></channel></rss>